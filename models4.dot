digraph graph_title {
  graph[overlap=false, splines=true, bgcolor="none"]
"Storage" [shape=Mrecord, label="{Storage|}"]
"Storage::Base" [shape=Mrecord, label="{Base|\l|I + write(file, file_name)\lI + read(file_name)\lI + delete(file)\lI + file_list(dir, file_type)\lI + ctime(file_name)\lI + directory?(dir)\lI + delete_all(dir)\l}"]
"Storage::S3Adapter" [shape=Mrecord, label="{S3Adapter|\l|I + initialize()\lI + write(file, file_name)\lI + read(file_name)\lI + delete(file)\lI + copy(source, target)\lI + file_list(dir, file_type)\lI + ctime(file_name)\lI + directory?(dir)\lI + delete_all(dir)\l}"]
"MyMeds" [shape=Mrecord, label="{MyMeds|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"Component::MyMeds::AdditionalInfo" [shape=Mrecord, label="{AdditionalInfo|}"]
"AdditionalInfo::Component::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + text_value(form)\l}"]
"Component::MyMeds::AdverseEventPicker" [shape=Mrecord, label="{AdverseEventPicker|}"]
"AdverseEventPicker::Component::MyMeds::V1" [shape=Mrecord, label="{V1|S - default_coded_field()\lS - inline_verbatim_enabled?()\l|I + validate(report, data)\lI + fix_data(report, data)\lI + find_event(data, report)\lI + event_only?(data)\lI + verbatim_only?(data)\lI + event_and_verbatim?(data)\lI + add_new_field(index, report)\lI + editable?(form)\lI + has_edit_event?(form)\lI + custom_term?(form)\lI + valid_form_object?(object)\lI + term_valid?(object)\lI + coded_term(object)\lI + llt_code(object)\lI + show(opts = {})\lI + remove_field_from_report(report, field)\lI + show_additional_info?()\lI + show_meddra_list?()\lI + add_another_label()\lI - remove_coded_adverse_event_by_llt_code(data_source, llt_code)\lI - set_coded_term(object)\l}"]
"Component::MyMeds::AdverseEventSingleChoice" [shape=Mrecord, label="{AdverseEventSingleChoice|}"]
"AdverseEventSingleChoice::Component::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + values(form)\l}"]
"Component::MyMeds::AgePicker" [shape=Mrecord, label="{AgePicker|}"]
"AgePicker::Component::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + validate(report, data)\lI + common_format(element, data, person = patient)\lI + summary_values(details)\lI + patient_age_class()\lI - validate_age(report, data)\lI - validate_date_of_birth(report, data)\lI - pregnancy_age_allowed_range()\lI - clear_age(data)\lI - clear_date_of_birth(data)\lI - clear_year_of_birth_data(data)\lI - clear_all_year_of_birth(data)\lI - clear_year_of_birth(data)\lI - clear_year_of_birth_unknown(data)\lI - format_year_of_birth_summary(age_picker)\l}"]
"Component::MyMeds::Autocomplete" [shape=Mrecord, label="{Autocomplete|}"]
"Autocomplete::Component::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + data(form)\lI + editable?(form)\lI + complete_name(form)\lI + enable_meddra?(form)\lI + placeholder()\lI - autosuggest_create(form)\lI - inline_verbatim(form)\lI - modal_maxlength(form)\lI - autocomplete_maxlength(form)\lI - non_autocomplete_maxlength(form)\lI - insert_into(form)\lI - coded_field(form)\lI - allow_verbatim_and_coded(form)\l}"]
"Component::MyMeds::CountrySelect" [shape=Mrecord, label="{CountrySelect|}"]
"CountrySelect::Component::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + country_list()\lI - include_unknown?()\l}"]
"Component::MyMeds::DatePicker" [shape=Mrecord, label="{DatePicker|}"]
"DatePicker::Component::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + show(opts = {})\lI + validate(report, data)\lI + age(opts = {})\lI + view_for_show(opts = {})\l}"]
"Component::MyMeds::DateRange" [shape=Mrecord, label="{DateRange|}"]
"DateRange::Component::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + from_label()\lI + to_label()\lI + show(opts = {})\lI + validate(report, data)\l}"]
"Component::MyMeds::DateTimePicker" [shape=Mrecord, label="{DateTimePicker|}"]
"DateTimePicker::Component::MyMeds::V1" [shape=Mrecord, label="{V1|}"]
"Component::MyMeds::FormulationSelector" [shape=Mrecord, label="{FormulationSelector|}"]
"FormulationSelector::Component::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + values(form, toggle)\lI + unknown_opt(toggle)\lI + not_provided_opt(toggle)\lI + options(form)\lI + selected_option(form)\l}"]
"Component::MyMeds::HcpReaction" [shape=Mrecord, label="{HcpReaction|}"]
"HcpReaction::Component::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + validate(report, data)\lI + fix_data(report, data)\lI + side_effect_picker(form)\l}"]
"Component::MyMeds::HeightPicker" [shape=Mrecord, label="{HeightPicker|}"]
"HeightPicker::Component::MyMeds::V1" [shape=Mrecord, label="{V1|}"]
"Component::MyMeds::IndicationPicker" [shape=Mrecord, label="{IndicationPicker|}"]
"IndicationPicker::Component::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + validate(report, data)\lI + values(form)\l}"]
"Component::MyMeds::InvestigationBase" [shape=Mrecord, label="{InvestigationBase|}"]
"InvestigationBase::Component::MyMeds::V1" [shape=Mrecord, label="{V1|S + investigation()\lS + investigation_type()\lS + investigation_ui_type()\lS + default_type()\lS + endpoint()\l|I + show_assessments?()\lI + add_when_editing()\lI + data(form)\lI + static_data(form)\lI + editable?(form)\lI + valid_form_object?(object)\lI + type_valid?(object)\lI + view_for_show(opts = {})\lI + view_for_investigation(name, form)\lI + range(opts = {})\lI + finding(opts = {})\lI + pass_fail(opts = {})\lI + unknown(opts = {})\lI + other(opts = {})\l}"]
"Component::MyMeds::InvestigationFinding" [shape=Mrecord, label="{InvestigationFinding|}"]
"InvestigationFinding::Component::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + has_results?(data)\l}"]
"Component::MyMeds::InvestigationFindingDescription" [shape=Mrecord, label="{InvestigationFindingDescription|}"]
"InvestigationFindingDescription::Component::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + editable?(form)\l}"]
"Component::MyMeds::InvestigationFindingResult" [shape=Mrecord, label="{InvestigationFindingResult|}"]
"InvestigationFindingResult::Component::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + editable?(form)\lI + validate(report, data)\lI + valid_form_object?(object)\lI + date_valid?(object)\lI + result_valid?(object)\l}"]
"Component::MyMeds::InvestigationOther" [shape=Mrecord, label="{InvestigationOther|}"]
"InvestigationOther::Component::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + has_results?(data)\l}"]
"Component::MyMeds::InvestigationOtherResult" [shape=Mrecord, label="{InvestigationOtherResult|}"]
"InvestigationOtherResult::Component::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + editable?(form)\lI + validate(report, data)\lI + valid_form_object?(object)\lI + date_valid?(object)\lI + units()\lI + result_valid?(object)\l}"]
"Component::MyMeds::InvestigationPassFail" [shape=Mrecord, label="{InvestigationPassFail|}"]
"InvestigationPassFail::Component::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + has_results?(data)\l}"]
"Component::MyMeds::InvestigationPassFailResult" [shape=Mrecord, label="{InvestigationPassFailResult|}"]
"InvestigationPassFailResult::Component::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + editable?(form)\lI + validate(report, data)\lI + valid_form_object?(object)\lI + date_valid?(object)\lI + result_valid?(object)\l}"]
"Component::MyMeds::InvestigationRange" [shape=Mrecord, label="{InvestigationRange|}"]
"InvestigationRange::Component::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + has_results?(data)\l}"]
"Component::MyMeds::InvestigationRangeNormal" [shape=Mrecord, label="{InvestigationRangeNormal|}"]
"InvestigationRangeNormal::Component::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + editable?(form)\lI + valid_form_object?(object)\lI + units()\lI + range_valid?(object)\l}"]
"Component::MyMeds::InvestigationRangeResult" [shape=Mrecord, label="{InvestigationRangeResult|}"]
"InvestigationRangeResult::Component::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + editable?(form)\lI + validate(report, data)\lI + valid_form_object?(object)\lI + date_valid?(object)\lI + value_valid?(object)\lI + range(object)\l}"]
"Component::MyMeds::InvestigationUnknown" [shape=Mrecord, label="{InvestigationUnknown|}"]
"InvestigationUnknown::Component::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + has_results?(data)\l}"]
"Component::MyMeds::MedicationBatch" [shape=Mrecord, label="{MedicationBatch|}"]
"MedicationBatch::Component::MyMeds::V1" [shape=Mrecord, label="{V1|S + unknown_not_provided()\l|I + show(opts = {})\lI + common_format(data, config)\lI + enabled?(config, field)\lI + allowed_fields()\l}"]
"Component::MyMeds::MedicationPicker" [shape=Mrecord, label="{MedicationPicker|}"]
"MedicationPicker::Component::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + validate(report, data)\lI + fix_data(report, data)\lI + add_new_field(index, report)\lI + data(form)\lI + editable?(form)\lI + not_removable()\lI + show_meddra_list?()\lI + valid_form_object?(object)\lI + term(object)\lI + term_valid?(object)\lI + is_country_product?(product_name, selected_country)\lI + toggle?(form)\lI + show_add_another?()\lI + show_additional_info?()\lI + product_country(reporter_country, product_country)\lI + default_product()\lI + show(opts = {})\lI + view_for_show(opts = {})\lI + study(opts = {})\lI + fix_indications(report, report_data, data)\lI + fix_other_indication(data, report, report_data, indication_key)\lI + other_indication_data(data, indication_data)\lI + get_indication_values(report, data)\lI + remove_field_from_report(report, field)\lI + study_drugs(report)\lI + study_has_drugs?(report)\lI - find_product_type(report_data)\lI - find_product_type_with_country(name, country)\lI - find_product_type_without_country(name)\lI - get_product_type_without_country(drugs)\lI - get_sub_product_type_without_country(drugs)\l}"]
"Component::MyMeds::Medicine" [shape=Mrecord, label="{Medicine|}"]
"Medicine::Component::MyMeds::V1" [shape=Mrecord, label="{V1|}"]
"V1::Medicine::Component::MyMeds::DoseChange" [shape=Mrecord, label="{DoseChange|}"]
"DoseChange::V1::Medicine::Component::MyMeds::Configurable" [shape=Mrecord, label="{Configurable|\l|I + configurable?()\lI + return_dose?()\l}"]
"DoseChange::V1::Medicine::Component::MyMeds::View" [shape=Mrecord, label="{View|S + summary_label_path()\l|I + options()\lI + improved()\lI + reverted()\lI + reoccurance()\lI - t_stopped_text()\lI - class_css(toggle = .dose-change-improved)\lI + initialize(form)\lI + challenge_text()\lI - self_reporting?()\l}"]
"Medicine::Component::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + show(opts = {})\lI + configured_indications(report)\lI + validate(report, data)\lI + fix_data(report, data)\lI + medication_picker(form)\lI + product_country(reporter_country, product_country)\lI + show_remove?(form)\lI + show_edit?(form)\lI + show_causality?(form)\lI + allowed_fields(data)\lI + show_country?(form)\lI + term_name(form)\lI + field_list(form)\lI + default_product()\lI + self_report(form)\lI + study_drug?(form)\l}"]
"Component::MyMeds::MedicineBotox" [shape=Mrecord, label="{MedicineBotox|}"]
"MedicineBotox::Component::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + product_country(reporter_country, product_country)\lI + validate(report, data)\lI + fix_data(report, data)\lI + allowed_fields(data)\lI + default_product()\lI + product_present?(report)\lI + show_remove?(form)\lI + show_edit?(form)\lI + study_drug?(form)\lI + term_name(form)\lI + medication_picker(form)\lI + common_format(element, data)\lI - medicine_botox_value(element, data)\lI - primary_drug_value(element, data)\lI - batch_config(drug)\l}"]
"Component::MyMeds::MedicineCausality" [shape=Mrecord, label="{MedicineCausality|}"]
"MedicineCausality::Component::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + side_effects(form)\lI + type(form)\lI + values(form)\l}"]
"Component::MyMeds::MultiChoice" [shape=Mrecord, label="{MultiChoice|}"]
"MultiChoice::Component::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + values(form)\lI + show(opts = {})\l}"]
"Component::MyMeds::Reaction" [shape=Mrecord, label="{Reaction|}"]
"Reaction::Component::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + validate(report, data)\lI + fix_data(report, data)\lI + side_effect_picker(form)\l}"]
"Component::MyMeds::SingleChoice" [shape=Mrecord, label="{SingleChoice|}"]
"SingleChoice::Component::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + values(form)\lI + label_for_value(selected_value)\l}"]
"Component::MyMeds::StudyLinkPicker" [shape=Mrecord, label="{StudyLinkPicker|}"]
"StudyLinkPicker::Component::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + show(opts = {})\lI + summary_values(data)\lI - study_selected(data)\lI - study_full_name(data)\l}"]
"Component::MyMeds::TelephoneNumber" [shape=Mrecord, label="{TelephoneNumber|}"]
"TelephoneNumber::Component::MyMeds::V1" [shape=Mrecord, label="{V1|}"]
"Component::MyMeds::TimePicker" [shape=Mrecord, label="{TimePicker|}"]
"TimePicker::Component::MyMeds::V1" [shape=Mrecord, label="{V1|}"]
"Component::MyMeds::WeightPicker" [shape=Mrecord, label="{WeightPicker|}"]
"WeightPicker::Component::MyMeds::V1" [shape=Mrecord, label="{V1|}"]
"Component::MyMeds::Multiple" [shape=Mrecord, label="{Multiple|S + included()\l|I + show(opts = {})\lI + multiple(opts = {})\lI + follow_up(opts = :Hash)\l}"]
"Component::MyMeds::NoModuleError" [shape=Mrecord, label="{NoModuleError|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"Module::MyMeds::AdverseEvents" [shape=Mrecord, label="{AdverseEvents|}"]
"AdverseEvents::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + validate(report, data)\lI - clean_coded_terms(data)\lI - clean_causality(report)\lI - remove_empty_entries(report, data)\lI - clean_causality_on_medication(medication, allowed_events)\lI - flatten_hash(hash, prefix = nil)\lI - medical_information_selected?()\lI - product_complaint_selected?()\lI - medical_information_toggle_exists?()\lI - selected_medical_information_value()\lI - product_complaint_toggle_exists?()\lI - selected_product_complaint_value()\l}"]
"Module::MyMeds::AdverseEventsBotox" [shape=Mrecord, label="{AdverseEventsBotox|}"]
"AdverseEventsBotox::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + validate(report, data)\lI + common_format(element, data)\lI + summary_values(data)\l}"]
"Module::MyMeds::ClinicalStudyMedications" [shape=Mrecord, label="{ClinicalStudyMedications|}"]
"ClinicalStudyMedications::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + validate(report, data)\lI + drugs(report)\lI + summary_values(data)\l}"]
"Module::MyMeds::CompanyAwareDate" [shape=Mrecord, label="{CompanyAwareDate|}"]
"CompanyAwareDate::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + validate(report, data)\lI + show(opts = {})\lI + common_format(element, data)\lI + summary_values(data)\lI + summary_title(data)\lI + data_present?(report)\lI + show_study_link?(report)\lI - max_allowed_date(report)\lI - format_customer_category(customer_category)\l}"]
"Module::MyMeds::ConcomitantMedications" [shape=Mrecord, label="{ConcomitantMedications|}"]
"ConcomitantMedications::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + validate(report, data)\lI + drugs(report)\lI + remove_empty_entries(report, data)\lI + common_format(element, data)\lI + summary_values_for(drug)\lI - indication(drug)\lI - output_element()\l}"]
"Module::MyMeds::CrdDetails" [shape=Mrecord, label="{CrdDetails|}"]
"CrdDetails::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + common_format(element, data)\lI + summary_values(data)\l}"]
"Module::MyMeds::DeathDetails" [shape=Mrecord, label="{DeathDetails|}"]
"DeathDetails::Module::MyMeds::V1" [shape=Mrecord, label="{V1|S + unknown_not_provided()\l|I + validate(report, data)\lI + common_format(element, data)\lI + summary_values(data)\lI - death_present?(data)\lI - cause_of_death(data)\l}"]
"Module::MyMeds::HcpReaction" [shape=Mrecord, label="{HcpReaction|}"]
"HcpReaction::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + common_format(element, data)\lI + summary_values_for(event)\lI - format_reaction(event)\lI - has_verbatim?(event)\lI - is_bodymap?(event)\l}"]
"Module::MyMeds::Investigations" [shape=Mrecord, label="{Investigations|}"]
"Investigations::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + assessments()\lI + assessment(assessment)\lI + detailed_summary?(assessment)\lI + each_investigation(data, block)\lI + common_format(element, data)\lI - base_common_format(data, test_results)\lI - unknown_common_format(data)\lI - t2_common_format(data)\lI - t3_common_format(data)\lI - t4_common_format(data)\lI - t7_common_format(data)\lI - result_values(result_data)\l}"]
"Module::MyMeds::LiverOtherMedicines" [shape=Mrecord, label="{LiverOtherMedicines|}"]
"LiverOtherMedicines::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + common_format(element, data)\lI + summary_values(data)\l}"]
"Module::MyMeds::MedicalContext" [shape=Mrecord, label="{MedicalContext|}"]
"MedicalContext::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + has_summary?()\lI + show(opts = {})\lI + validate(report, data)\lI + common_format(element, data)\lI - validate_product_complaint(report, data)\lI - validate_medical_information(report, data)\l}"]
"Module::MyMeds::Medicine" [shape=Mrecord, label="{Medicine|}"]
"Medicine::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + validate(report, data)\lI + clean_formulation(drug)\lI + common_format(element, data)\lI + batch_config(drug)\lI + summary_values_for(drug, user_type)\lI + summary_data(drug, user_type)\lI + has_primary_medicine?(report)\lI + validate_lot_number(report, drug, type = )\lI - default_product()\lI - find_field(product_type, field)\lI - find_sub_component(field, subcomponent)\lI - filter_fields(subcomponent, subproducts)\lI - causality_data(drug_name, data, term_name, result)\lI - localise_reason_for_not_lot_number(unlocalised_reason)\l}"]
"Module::MyMeds::MedicineBotox" [shape=Mrecord, label="{MedicineBotox|}"]
"MedicineBotox::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + validate(report, data)\lI + common_format(element, data)\lI + allowed_fields(data)\lI + default_product()\lI + summary_values_for(drug, user_type)\lI + product_present?(report)\l}"]
"Module::MyMeds::MedicineBotoxEditable" [shape=Mrecord, label="{MedicineBotoxEditable|}"]
"MedicineBotoxEditable::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + has_primary_medicine?(report)\lI + has_additional_medicine?(report)\lI + validate(report, data)\lI + summary_values_for(drug, user_type)\lI + common_format(element, data)\l}"]
"Module::MyMeds::MedicineEditable" [shape=Mrecord, label="{MedicineEditable|}"]
"MedicineEditable::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + has_additional_medicine?(report)\lI + show_study_medicine_missing?(report)\l}"]
"Module::MyMeds::NoResponseToTreatment" [shape=Mrecord, label="{NoResponseToTreatment|}"]
"NoResponseToTreatment::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + validate(report, data)\lI + common_format(element, data)\lI + summary_values(data)\lI + summary_title(report)\lI + data_present?(report)\lI + reaction_name(report)\lI + adverse_event_present?(report)\l}"]
"Module::MyMeds::OtherConditionPicker" [shape=Mrecord, label="{OtherConditionPicker|}"]
"OtherConditionPicker::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + validate(report, data)\lI + common_format(element, data)\lI + summary_values_for(event)\lI + events(data)\lI + event_names(data)\lI - clean_dots(data)\l}"]
"Module::MyMeds::ParticipantDetails" [shape=Mrecord, label="{ParticipantDetails|}"]
"ParticipantDetails::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + common_format(element, data)\lI + summary_values(data)\l}"]
"Module::MyMeds::PatientDetails" [shape=Mrecord, label="{PatientDetails|}"]
"PatientDetails::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + validate(report, data)\lI + address_given?(data)\lI + show(opts = {})\lI + common_format(element, data)\lI + summary_values(data)\lI - address_details(details)\lI - check_consent(consent_value)\lI - validate_enrolment_number(report)\lI - validate_patient_detail(report)\lI - validate_telephone_number(report)\lI - validate_consent_to_contact_reporter(report)\lI - validate_contact_info(report)\lI - reporter_is_patient?(report_data)\l}"]
"Module::MyMeds::PatientDetailsBase" [shape=Mrecord, label="{PatientDetailsBase|}"]
"PatientDetailsBase::Module::MyMeds::V1" [shape=Mrecord, label="{V1|}"]
"Module::MyMeds::PatientDetailsOther" [shape=Mrecord, label="{PatientDetailsOther|}"]
"PatientDetailsOther::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + validate(report, data)\lI + common_format(element, data)\lI + summary_values(data)\lI + enable_patient_consent_options?(report)\lI + show_patient_consent_fields(report)\lI + show_patient_details_other_fields?(report)\lI - validate_patient_initials(report, data)\lI - validate_patient_detail(report, data)\lI - validate_enrolment_number(report, data)\lI - validate_patient_other_details?(report, data)\lI - validate_patient_consent(report, data)\lI - need_validate_patient_consent?(report, data)\lI - clean_patient_data(report, data)\lI - clean_patient_initials(data)\lI - clean_patient_id(data)\lI - clean_patient_height(data)\lI - clean_patient_weight(data)\lI - clean_patient_consent(data)\l}"]
"Module::MyMeds::PatientSeenGP" [shape=Mrecord, label="{PatientSeenGP|}"]
"PatientSeenGP::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + validate(report, data)\lI + address_given?(data)\lI + show(opts = {})\lI + common_format(element, data)\lI + summary_values(data)\lI - address_details(data)\lI - check_consent(consent_value)\lI - validate_telephone_number(report)\l}"]
"Module::MyMeds::PreviousNotification" [shape=Mrecord, label="{PreviousNotification|}"]
"PreviousNotification::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + common_format(element, data)\l}"]
"Module::MyMeds::Reaction" [shape=Mrecord, label="{Reaction|}"]
"Reaction::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + common_format(element, data)\lI + summary_values_for(event)\lI + event_data(data, event_name)\lI - format_reaction(event)\lI - has_verbatim?(event)\lI - is_bodymap?(event)\lI - seriousness_other?(event)\l}"]
"Module::MyMeds::ReporterDetails" [shape=Mrecord, label="{ReporterDetails|}"]
"ReporterDetails::Module::MyMeds::V1" [shape=Mrecord, label="{V1|S + contact_centre_relationship_values()\lS + hcp_relationship_values()\lS + mop_relationship_values()\lS - relationship_values()\l|I + validate(report, data)\lI + section_shown?(report)\lI + patient_is_a_reporter?(report)\lI + address_given?(data)\lI + show(opts = {})\lI + common_format(element, report)\lI + summary_values(data)\lI - address_details(data)\lI - check_consent(consent_value)\lI - validate_reporter_type(report, data)\lI - validate_reporter_country(report, data)\lI - validate_reporter_relationship_to_patient(report)\lI - validate_telephone_number(report)\lI - validate_consent_to_contact_reporter(report)\lI - validate_contact_info(report)\lI - reporter_is_someone_else?(report_data)\lI - reporter_type_values(value)\l}"]
"Module::MyMeds::Section" [shape=Mrecord, label="{Section|}"]
"Section::Module::MyMeds::V1" [shape=Mrecord, label="{V1|S + new_module()\l|I + show(opts = {})\lI + update(report, data)\lI + summary_data(report)\lI + data_present?(report)\l}"]
"Module::MyMeds::SideEffectSelector" [shape=Mrecord, label="{SideEffectSelector|}"]
"SideEffectSelector::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + validate(report, data)\lI + summary_values(data)\lI + summary_title(data)\lI + rearrange_side_effect_data(report, data)\lI + save_adverse_events_enable(report, data)\l}"]
"Module::MyMeds::StaffReporterDetails" [shape=Mrecord, label="{StaffReporterDetails|}"]
"StaffReporterDetails::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + common_format(element, data)\lI + summary_values(data)\l}"]
"Module::MyMeds::StudyMedicine" [shape=Mrecord, label="{StudyMedicine|}"]
"StudyMedicine::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + common_format(element, data)\lI + summary_values_for(drug, user_type)\lI - fill_in_drug_details(drug)\l}"]
"Module::MyMeds::SupplementalInvestigations" [shape=Mrecord, label="{SupplementalInvestigations|}"]
"SupplementalInvestigations::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + investigation_groups_for(report)\lI + common_format(element, data)\lI - t2_common_format(data)\lI - t3_common_format(data)\lI - t4_common_format(data)\l}"]
"Module::MyMeds::SupplementalRiskFactors" [shape=Mrecord, label="{SupplementalRiskFactors|}"]
"SupplementalRiskFactors::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + common_format(element, data)\lI + summary_values(data)\l}"]
"Module::MyMeds::SupplementalSideEffects" [shape=Mrecord, label="{SupplementalSideEffects|}"]
"SupplementalSideEffects::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + common_format(element, data)\lI + summary_values(data)\lI - get_side_effects(data)\l}"]
"Module::MyMeds::SuspectMedication" [shape=Mrecord, label="{SuspectMedication|}"]
"SuspectMedication::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + drugs(report)\lI + validate(report, data)\l}"]
"Module::MyMeds::SuspectMedications" [shape=Mrecord, label="{SuspectMedications|}"]
"SuspectMedications::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + validate(report, data)\lI + remove_empty_entries(report, data)\lI + drugs(report)\lI + clean_coded_terms(data)\l}"]
"Module::MyMeds::TermsAndConditions" [shape=Mrecord, label="{TermsAndConditions|}"]
"TermsAndConditions::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + common_format(element, report)\lI + summary_values(data)\l}"]
"Module::MyMeds::WhoAffected" [shape=Mrecord, label="{WhoAffected|}"]
"WhoAffected::Module::MyMeds::V1" [shape=Mrecord, label="{V1|\l|I + validate(report, data)\lI + summary_values(data)\lI + options(report)\lI + enable_patient_consent_options?(report)\l}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|}"]
"MyMeds::Component" [shape=Mrecord, label="{Component|S + module_name()\lS + param(name, opts = {})\lS + component(name, klass, config = {})\lS + params()\lS + class_from_cell_name(klass)\lS + instance(opts = {})\lS + available_subcomponents()\l|I + initialize(config = {})\lI + has_param?(param)\lI + [](param)\lI + []=(param, value)\lI + view_for_show(opts = {})\lI + show(opts = {})\lI + summary(opts = {})\lI + inspect()\lI + path(suffix = nil)\lI + remove_field_from_report(report, field)\lI + need_to_validate(report, field)\lI + add_error_to_report(report, field, field_path = nil)\lI + module_name()\lI + module_variant()\lI + configure!(config)\lI + subcomponent(name, params = {})\lI + has_subcomponent?(name)\lI + current_controller()\lI + data_present?(report)\lI + has_summary?()\lI + component_params()\lI + summary_date_value(data, key)\lI - subcomponents()\lI - option_value(key)\l}"]
"MyMeds::Journey" [shape=Mrecord, label="{Journey|S + symbolize_page()\lS + symbolize_event()\lS - symbolize()\l|I + initialize()\lI + add_modules(page, new_modules)\lI + pages()\lI + field(field_path)\lI + component(base_module, path)\lI + subcomponent(name)\lI + components()\lI + page_components()\lI + module_pages()\lI + traits()\lI + trait_writers()\lI + enable_triggers()\lI + restrict_categories(categories)\lI - add_module(page, name, new_module)\l}"]
"Journey::MyMeds::ConflictingModuleError" [shape=Mrecord, label="{ConflictingModuleError|}"]
"Journey::MyMeds::Field" [shape=Mrecord, label="{Field|}"]
"MyMeds::Journeys" [shape=Mrecord, label="{Journeys|}"]
"Journeys::MyMeds::ContactCentre" [shape=Mrecord, label="{ContactCentre|}"]
"ContactCentre::Journeys::MyMeds::Botox" [shape=Mrecord, label="{Botox|}"]
"Botox::ContactCentre::Journeys::MyMeds::V1" [shape=Mrecord, label="{V1|}"]
"ContactCentre::Journeys::MyMeds::GlobalAdverseEvent" [shape=Mrecord, label="{GlobalAdverseEvent|}"]
"GlobalAdverseEvent::ContactCentre::Journeys::MyMeds::V1" [shape=Mrecord, label="{V1|}"]
"ContactCentre::Journeys::MyMeds::MarketResearchProgram1" [shape=Mrecord, label="{MarketResearchProgram1|}"]
"MarketResearchProgram1::ContactCentre::Journeys::MyMeds::V1" [shape=Mrecord, label="{V1|}"]
"ContactCentre::Journeys::MyMeds::Psp" [shape=Mrecord, label="{Psp|}"]
"Psp::ContactCentre::Journeys::MyMeds::V1" [shape=Mrecord, label="{V1|}"]
"ContactCentre::Journeys::MyMeds::SideEffect" [shape=Mrecord, label="{SideEffect|}"]
"SideEffect::ContactCentre::Journeys::MyMeds::V1" [shape=Mrecord, label="{V1|}"]
"Journeys::MyMeds::Hcp" [shape=Mrecord, label="{Hcp|}"]
"Hcp::Journeys::MyMeds::ClinicalStudy" [shape=Mrecord, label="{ClinicalStudy|}"]
"ClinicalStudy::Hcp::Journeys::MyMeds::V1" [shape=Mrecord, label="{V1|}"]
"Hcp::Journeys::MyMeds::SideEffect" [shape=Mrecord, label="{SideEffect|}"]
"SideEffect::Hcp::Journeys::MyMeds::V1" [shape=Mrecord, label="{V1|}"]
"Hcp::Journeys::MyMeds::SideEffectElm" [shape=Mrecord, label="{SideEffectElm|}"]
"SideEffectElm::Hcp::Journeys::MyMeds::V1" [shape=Mrecord, label="{V1|}"]
"Journeys::MyMeds::Mop" [shape=Mrecord, label="{Mop|}"]
"Mop::Journeys::MyMeds::SideEffect" [shape=Mrecord, label="{SideEffect|}"]
"SideEffect::Mop::Journeys::MyMeds::V1" [shape=Mrecord, label="{V1|}"]
"MyMeds::Journeys" [shape=Mrecord, label="{Journeys|}"]
"MyMeds::Journeys" [shape=Mrecord, label="{Journeys|}"]
"MyMeds::Journeys" [shape=Mrecord, label="{Journeys|}"]
"MyMeds::Journeys" [shape=Mrecord, label="{Journeys|}"]
"MyMeds::Journeys" [shape=Mrecord, label="{Journeys|}"]
"MyMeds::Journeys" [shape=Mrecord, label="{Journeys|}"]
"MyMeds::Journeys" [shape=Mrecord, label="{Journeys|}"]
"MyMeds::Journeys" [shape=Mrecord, label="{Journeys|}"]
"MyMeds::Journeys" [shape=Mrecord, label="{Journeys|}"]
"MyMeds::Module" [shape=Mrecord, label="{Module|S + provides_trait()\lS + provides_trait_writer()\lS + traits()\lS + trait_writers()\lS + module_name()\lS + module_namespace()\l|I + validate(report, data)\lI + summary_date_range_value(data, key)\l}"]
"MyMeds::ReportFormBuilder" [shape=Mrecord, label="{ReportFormBuilder|S + index()\l|I + index()\l}"]
"ReportFormBuilder::MyMeds::Base" [shape=Mrecord, label="{Base|\l|I + initialize(object_name, object, template, options)\lI + report()\lI + data()\lI + data_form(opts = {}, block)\l}"]
"ReportFormBuilder::MyMeds::DataBuilder" [shape=Mrecord, label="{DataBuilder|\l|I + initialize(object_name, object, template, options)\lI + select(method, choices, options = {}, html_options = {})\lI + text_field(method, options = {})\lI + check_box(method, options = {}, checked_value = 1, unchecked_value = 0)\lI + radio_button(method, tag_value, options = {})\lI + hidden_field(method, options = {})\lI + file_field(method, options = {})\lI + report()\lI + path()\lI + data()\lI + component()\lI + module(klass, name)\lI + event()\lI + subcomponent(name, opts = {})\lI + temporary?()\lI + data_key(key, block)\lI + template(name, *args, block)\lI + render_component(opts = {})\lI + customer_name()\lI + text(component, key, opts = {})\lI + t(component_path, opts = :Hash)\lI - module_form_for(klass, component_name, block)\lI - component_form_for(component_name, opts, block)\lI - form_options(component)\l}"]
"MyMeds::VerticalTable" [shape=Mrecord, label="{VerticalTable|S + t()\l|I + for_key(key)\l}"]
"AdditionalDocsController" [shape=Mrecord, label="{AdditionalDocsController|\l|I + create()\lI + edit()\lI + update()\lI + destroy()\lI + hide()\lI - additional_docs_params()\l}"]
"Admin" [shape=Mrecord, label="{Admin|}"]
"Admin::AccessRightsController" [shape=Mrecord, label="{AccessRightsController|\l|I + new()\lI + create()\lI + edit()\lI + update()\lI + destroy()\lI - log_activity(entity, key)\lI - access_right_details()\l}"]
"Admin::ApplicationController" [shape=Mrecord, label="{ApplicationController|\l|I - management_path()\lI - add_root_breadcrumb()\l}"]
"Admin::ConfigurationController" [shape=Mrecord, label="{ConfigurationController|\l|I + customer()\lI + customer_info()\lI + update_customer_info()\lI + public_access()\lI + update_public_access()\lI + localisation()\lI + update_localisation()\lI + follow_up()\lI + update_follow_up()\lI + contact_centre()\lI + update_contact_centre()\lI + data_export()\lI + update_data_export()\lI + single_sign_on()\lI + update_single_sign_on()\lI + view_elm_journeys()\lI + view_test_datepicker()\lI + product_search()\lI + product_search_results()\lI + load_product_details()\lI + product_modal()\lI + lms_groups()\lI + test_lms_connection()\lI + product_categories()\lI - product_search_details()\lI - public_access_params()\lI - localisation_params()\lI - contact_centre_params()\lI - follow_up_params()\lI - customer_info_params()\lI - data_export_params()\lI - single_sign_on_params()\lI - load_contact_centre_variables()\lI - product_details_indications()\lI - add_root_breadcrumb()\l}"]
"Admin::ConfirmationsController" [shape=Mrecord, label="{ConfirmationsController|\l|I + update()\lI + show()\lI | confirmation_period_expired?()\lI | with_unconfirmed_confirmable()\lI | do_show()\lI | do_confirm()\lI | do_already_confirmed()\lI | do_expired_token()\l}"]
"Admin::CountryController" [shape=Mrecord, label="{CountryController|\l|I + index()\lI + update()\lI + edit()\lI + list()\lI + enable()\lI - country_languages_params()\lI - country_list_params()\lI - add_root_breadcrumb()\l}"]
"Admin::ExportMobileAssetsController" [shape=Mrecord, label="{ExportMobileAssetsController|\l|I + show()\l}"]
"Admin::HomeController" [shape=Mrecord, label="{HomeController|\l|I + index()\lI - add_root_breadcrumb()\l}"]
"Admin::JobsController" [shape=Mrecord, label="{JobsController|\l|I + index()\lI + requeue()\lI + delete()\lI - failed_job(job)\lI - created_at(datetime)\lI - add_root_breadcrumb()\l}"]
"Admin::JourneysController" [shape=Mrecord, label="{JourneysController|\l|I + edit()\lI + update()\l}"]
"JourneysController::Admin::JourneyParams" [shape=Mrecord, label="{JourneyParams|\l|I + initialize(params)\lI + build()\l}"]
"Admin::LanguageController" [shape=Mrecord, label="{LanguageController|\l|I + index()\lI - collection()\l}"]
"Admin::LanguageForTranslationController" [shape=Mrecord, label="{LanguageForTranslationController|\l|I + index()\l}"]
"Admin::LmsUserController" [shape=Mrecord, label="{LmsUserController|\l|I + create()\l}"]
"Admin::MobileAssetsController" [shape=Mrecord, label="{MobileAssetsController|\l|I + show()\l}"]
"Admin::PasswordExpiredController" [shape=Mrecord, label="{PasswordExpiredController|\l|I + render(*args)\l}"]
"Admin::PasswordsController" [shape=Mrecord, label="{PasswordsController|\l|I + new()\lI + create()\lI + update()\lI + render(*args)\l}"]
"Admin::Reporting" [shape=Mrecord, label="{Reporting|}"]
"Reporting::Admin::AuditLogsController" [shape=Mrecord, label="{AuditLogsController|\l|I + index()\lI + show()\lI + list_types()\lI - save_criteria()\lI - load_criteria()\lI - audit_log_listing_params()\lI - all_groups()\lI - validate_user_related_fields()\l}"]
"Reporting::Admin::ListingsController" [shape=Mrecord, label="{ListingsController|\l|I + index()\lI + show()\lI + download()\lI + email()\lI - listing_parameters()\lI - create_listing()\lI - filtered_sites(sites)\lI - parse_date(date)\lI - add_root_breadcrumb()\l}"]
"Admin::Reporting" [shape=Mrecord, label="{Reporting|}"]
"Admin::ReportsController" [shape=Mrecord, label="{ReportsController|\l|I + index()\lI + show()\lI + search()\lI + reset_lock()\lI + ignore_e2b_ack()\lI + regenerate_pdf()\lI + history()\lI - add_root_breadcrumb()\l}"]
"Admin::SessionsController" [shape=Mrecord, label="{SessionsController|\l|I + new()\lI + create()\lI + destroy()\lI + auto_sign_out()\lI + show_after_sign_out()\lI - log_failed_login()\lI - failed_login?()\lI - target()\lI - get_redirect_path()\lI - contact_centre?()\lI - sso?()\lI - public_access?()\lI - sign_out_user()\l}"]
"Admin::SiteNotificationsController" [shape=Mrecord, label="{SiteNotificationsController|\l|I + new()\lI + edit()\lI + destroy()\lI + update()\lI + create()\lI - site_notification_details()\lI - add_root_breadcrumb()\l}"]
"Admin::SitesController" [shape=Mrecord, label="{SitesController|\l|I + index()\lI + new()\lI + create()\lI + edit()\lI + update()\lI + set_ng_modules()\lI + log_activity(entity, key)\lI + list()\lI + list_sites()\lI + list_recipients_sites()\lI + email_template_modal()\lI + list_journeys()\lI - prepare_site_on_error(crumb, action, valid_journeys)\lI - format_learning_group_ids(site_attributes)\lI - load_learning_groups()\lI - lms_roles_validation(site)\lI - validate_journeys(report_types)\lI - cached_templates()\lI - cached_sites()\lI - site_details()\lI - list_params()\lI - add_root_breadcrumb()\l}"]
"Admin::SitesFilterController" [shape=Mrecord, label="{SitesFilterController|\l|I + index()\l}"]
"Admin::StudiesController" [shape=Mrecord, label="{StudiesController|\l|I + index()\lI + list()\lI + status_list()\lI + studies_to_link()\lI + set_ng_modules()\lI + new()\lI + create()\lI + edit()\lI + update()\lI + available_sites()\lI + selected_sites()\lI - study_details()\lI - associate_sites_details()\lI - audit_log_entry(entity, key)\lI - format_indications(study)\lI - format_products(study)\lI - load_drugs()\lI - load_medicines()\lI - load_indications()\lI - add_products()\lI - list_params()\lI - prepare_site_ids(associated_sites)\lI - add_root_breadcrumb()\l}"]
"Admin::TestControlsController" [shape=Mrecord, label="{TestControlsController|\l|I + show()\l}"]
"Admin::TriggersController" [shape=Mrecord, label="{TriggersController|\l|I + index()\lI + new()\lI + create()\lI + edit()\lI + update()\lI + search()\lI - trigger_params()\l}"]
"Admin::UsersController" [shape=Mrecord, label="{UsersController|\l|I + index()\lI + elm_listing()\lI + new()\lI + set_ng_module()\lI + create()\lI + roles_list()\lI + list()\lI + elm_list()\lI + edit()\lI + update()\lI + send_confirmation_instructions?()\lI + edit_password()\lI + update_password()\lI + enable()\lI + disable()\lI + unlock()\lI + confirm()\lI + ajax_get_role_types()\lI + ajax_get_roles()\lI + ajax_get_sites()\lI + ajax_get_user_roles()\lI + ajax_get_exclusive_user_roles()\lI - load_and_check_user()\lI - check_system_user(user)\lI - client_admin_can_edit(client_admin, user)\lI - password_details()\lI - user_details()\lI - user_role()\lI - clean_blank_password_params(params)\lI - list_params()\lI - user_type(user_role)\lI - role_type(user)\lI - build_user(user, user_role)\lI - format_access_rights(user_roles)\lI - user_update_valid?(user_details, user, user_class)\lI - current_user_password_valid?()\lI - user_action_redirect(user)\lI - add_root_breadcrumb()\l}"]
"Admin::AccessRightsHelper" [shape=Mrecord, label="{AccessRightsHelper|\l|I + site_user_roles()\l}"]
"Admin::CountryHelper" [shape=Mrecord, label="{CountryHelper|\l|I + auto_selection_options()\lI + country_codes()\lI + auto_selection()\lI + languages_list(languages, locale)\l}"]
"Admin::JourneyHelper" [shape=Mrecord, label="{JourneyHelper|\l|I + journey_ethnicities()\lI + journey_document_types()\lI + journey_email_templates()\lI + hcp_seriousness_criteria()\lI + mop_seriousness_criteria()\l}"]
"Admin::SitesHelper" [shape=Mrecord, label="{SitesHelper|\l|I + site_notification_statuses()\lI + site_notification_triggers()\lI + site_notification_customer_categories()\lI + site_notification_seriousness()\lI + site_notification_report_categories()\lI + site_notification_pdf_formats()\lI + site_types()\lI + site_languages()\lI + site_pdf_options()\lI + site_statuses()\lI + site_public_access_options()\lI + site_report_access_options()\lI - reversed_hash_from_list(list, translation_key)\lI - hash_from_list(list, translation_key = nil)\lI - labeled_hash_from_list(list, translation_key)\l}"]
"Admin::TestControlsHelper" [shape=Mrecord, label="{TestControlsHelper|\l|I + format_categories(categories)\lI + reporter_types(type)\lI + validations()\lI + display_preformatted_text(text)\lI - contact_center_disabled?()\lI - enrolment_number_disabled?()\l}"]
"Admin::UserHelper" [shape=Mrecord, label="{UserHelper|\l|I + user_role_params()\lI + display_allow_e2b_generation_fields?()\lI + display_bypass_qr_fields?()\lI + user_category_label()\lI + display_authorize_changes?()\lI + display_resend_email?()\lI + display_language?()\lI + user_language_list()\lI + display_change_password?()\l}"]
"Api" [shape=Mrecord, label="{Api|}"]
"Api::V1" [shape=Mrecord, label="{V1|}"]
"V1::Api::BaseController" [shape=Mrecord, label="{BaseController|\l|I + append_info_to_payload(payload)\lI + set_current_controller()\lI + set_current_user()\l}"]
"V1::Api::CountriesController" [shape=Mrecord, label="{CountriesController|\l|I + index()\lI - locale()\l}"]
"V1::Api::JourneysController" [shape=Mrecord, label="{JourneysController|\l|I + show()\l}"]
"V1::Api::ReportsController" [shape=Mrecord, label="{ReportsController|\l|I + create()\l}"]
"V1::Api::VerifySignatureController" [shape=Mrecord, label="{VerifySignatureController|\l|I + verify()\lI - authenticate()\lI - auth_account(field)\l}"]
"Api::V1" [shape=Mrecord, label="{V1|}"]
"Api::V1" [shape=Mrecord, label="{V1|}"]
"Api::V1" [shape=Mrecord, label="{V1|}"]
"Api::V1" [shape=Mrecord, label="{V1|}"]
"ApplicationController" [shape=Mrecord, label="{ApplicationController|\l|I + append_info_to_payload(payload)\lI + application_config()\lI + customer_config()\lI + client_data_config()\lI + set_current_controller()\lI + current_user_date()\lI + current_time_zone()\lI + current_user_has_administrative_role?()\lI + devise_current_user()\lI + current_user()\lI + anonymous_user()\lI + system_user()\lI + user_signed_in?()\lI + home_page()\lI + after_sign_in_path_for(resource)\lI + after_sign_out_path_for(resource)\lI + current_ability()\lI + sanitize_params()\lI + set_current_language()\lI + set_locale(locale)\lI + default_url_options(options = {})\lI + detect_language()\lI + valid_customer_type?()\lI + after_session_expire_url()\lI + redirect_after_session_expire()\lI + redirect_page_timeout()\lI + show_language_selector?()\lI | verified_request?()\lI - check_customer_user_type()\lI - check_public_access_enabled()\lI - valid_locale(locale)\lI - check_landing_page_enabled(path)\lI - check_for_customer()\lI - render_404()\lI - check_for_referer()\lI - set_default_url_host()\lI - store_previous_path()\lI - previous_page()\lI - set_x_frame_options()\lI - set_csrf_cookie_for_ng()\lI - set_cache_buster()\lI - path_needed?()\l}"]
"AttachmentsController" [shape=Mrecord, label="{AttachmentsController|\l|I + download()\l}"]
"BodySelectorController" [shape=Mrecord, label="{BodySelectorController|\l|I + index()\lI + show()\lI + symptoms()\l}"]
"BrandsJourneysController" [shape=Mrecord, label="{BrandsJourneysController|}"]
"ClientAdmin::ApplicationController" [shape=Mrecord, label="{ClientAdmin::ApplicationController|}"]
"ClientAdmin::HomeController" [shape=Mrecord, label="{ClientAdmin::HomeController|\l|I + index()\lI - ensure_time_object(value)\l}"]
"ClinicalStudiesController" [shape=Mrecord, label="{ClinicalStudiesController|\l|I + index()\l}"]
"ContactCentre" [shape=Mrecord, label="{ContactCentre|}"]
"ContactCentre::ApplicationController" [shape=Mrecord, label="{ApplicationController|\l|I + check_contact_centre_enabled()\l}"]
"ContactCentre::HomeController" [shape=Mrecord, label="{HomeController|\l|I + index()\lI + disabled()\lI - add_root_breadcrumb()\lI - ensure_time_object(value)\l}"]
"ContactCentre::ListingsController" [shape=Mrecord, label="{ListingsController|\l|I + search()\lI + search_results()\lI - report_search_details()\lI - path_needed?()\lI - add_root_breadcrumb()\lI - validate_listing_params()\l}"]
"ContactCentre::QualityReviewController" [shape=Mrecord, label="{QualityReviewController|\l|I + index()\lI + review()\lI + add_root_breadcrumb()\l}"]
"ContactCentre::ReportHistoryController" [shape=Mrecord, label="{ReportHistoryController|\l|I + index()\lI + show()\lI + add_root_breadcrumb()\l}"]
"ContactCentre::Reporting" [shape=Mrecord, label="{Reporting|}"]
"Reporting::ContactCentre::CaseListingsController" [shape=Mrecord, label="{CaseListingsController|\l|I + search()\lI + search_result()\lI + search_csv()\lI - create_listing()\lI - validate_listing_params()\lI - validate_dates()\lI - parse_date(date)\lI - report_search_details()\l}"]
"Reporting::ContactCentre::ReconciliationListingsController" [shape=Mrecord, label="{ReconciliationListingsController|\l|I + index()\lI + search()\lI + search_result()\lI + search_csv()\lI + search_email()\lI + system_list()\lI - listing_parameters()\lI - create_listing()\lI - report_search_details()\lI - filter_not_allowed_sites()\lI - validate_listing_params()\lI - validate_dates()\lI - parse_date(date)\lI - add_root_breadcrumb()\l}"]
"Reporting::ContactCentre::ReconciliationsController" [shape=Mrecord, label="{ReconciliationsController|\l|I + edit()\lI + update()\lI + show_acknowledgements()\lI + show()\lI + reconciliations()\lI + create_manual_reconciliation()\lI + update_manual_reconciliation()\lI + remove_manual_reconciliation()\lI + reconciliation_history()\lI - report()\lI - report_details()\lI - report_reconciliation()\lI - reconciliation_params(primary_key)\lI - set_reconciliation_history()\lI - report_params()\lI - log_activity(key, data)\lI - add_user_info(recon)\l}"]
"Reporting::ContactCentre::ReportListingsController" [shape=Mrecord, label="{ReportListingsController|\l|I + index()\lI + show()\lI + download_e2b()\lI + summary_pdf()\lI + list()\lI - check_report_access()\lI - denied_redirect()\lI - user_can_access_report(report_ref)\lI - generate_pdf(report, filename)\lI - list_params()\lI - set_ng_module()\l}"]
"ContactCentre::Reporting" [shape=Mrecord, label="{Reporting|}"]
"ContactCentre::Reporting" [shape=Mrecord, label="{Reporting|}"]
"ContactCentre::Reporting" [shape=Mrecord, label="{Reporting|}"]
"ContactCentre::ReportsController" [shape=Mrecord, label="{ReportsController|\l|I + index()\lI + log_report()\lI + reporter()\lI + save_reporter()\lI + journey_and_site_selection()\lI + save_journey_and_site_selection()\lI + follow_up()\lI + show()\lI + resume()\lI + clone_report()\lI + confirm_clone_report()\lI + show_language_selector?()\lI - reporter_details()\lI - prepare_details(details)\lI - set_site_and_country(site)\lI - start_journey(report_type)\lI - set_session_data()\lI - full_site_info(site)\lI - journey_list(site)\lI - path_needed?()\lI - language_not_require?(country)\lI - previous_page()\lI - add_root_breadcrumb()\l}"]
"ContactCentre::SitesFilterController" [shape=Mrecord, label="{SitesFilterController|\l|I + index()\lI - submitted_sites()\lI - case_sites()\lI - reconciliation_sites()\l}"]
"ErrorsController" [shape=Mrecord, label="{ErrorsController|\l|I + show_message()\lI + redirect()\lI + redirect_from_omniauth()\l}"]
"FaqController" [shape=Mrecord, label="{FaqController|\l|I + index()\l}"]
"FollowUpsController" [shape=Mrecord, label="{FollowUpsController|\l|I + start()\lI + disabled()\lI + authorise()\lI + new()\lI + reporter_details()\lI + update_reporter()\lI - clear_session!()\lI - check_authorisation!()\l}"]
"ImprintController" [shape=Mrecord, label="{ImprintController|\l|I + index()\l}"]
"Konacha" [shape=Mrecord, label="{Konacha|}"]
"Konacha::SpecsController" [shape=Mrecord, label="{SpecsController|\l|I + parent()\lI + iframe()\lI | signed_in?(scope = nil)\l}"]
"LocaleController" [shape=Mrecord, label="{LocaleController|\l|I + change()\l}"]
"PrivacyController" [shape=Mrecord, label="{PrivacyController|\l|I + index()\l}"]
"ProblemController" [shape=Mrecord, label="{ProblemController|\l|I + index()\lI + create()\l}"]
"ReportsController" [shape=Mrecord, label="{ReportsController|\l|I + new()\lI + create()\lI + template()\lI + ajax_template()\lI + fix_template_data()\lI + remove_adverse_event()\lI + remove_medicine()\lI + load_component()\lI + prepare_template()\lI + update_trigger_message()\lI + remove_component()\lI + page()\lI + show()\lI + summary()\lI + summary_pdf()\lI + confirmation_summary_pdf()\lI + confirmation()\lI + send_confirmation_email()\lI + confirm_abandon()\lI + confirm_terms_and_conditions()\lI + abandon()\lI + render(*args)\lI + show_language_selector?()\lI - report_params()\lI - abandon_report_params()\lI - report_attrs()\lI - page_params()\lI - summary_params()\lI - report_session_valid?()\lI - show_supplemental_journey_warning(page)\lI - current_journey()\lI - detect_seed_drug()\lI - detect_customer_user_type()\lI - prepare_pdf(report)\lI - check_nil_referer()\lI - user_locale()\lI - submit_report()\lI - clear_session_report_info()\l}"]
"RobotsController" [shape=Mrecord, label="{RobotsController|\l|I + index()\l}"]
"Search" [shape=Mrecord, label="{Search|}"]
"Search::DrugsController" [shape=Mrecord, label="{DrugsController|\l|I + search()\l}"]
"Search::EventsController" [shape=Mrecord, label="{EventsController|\l|I + search()\lI - events_params()\l}"]
"Search::InvestigationsController" [shape=Mrecord, label="{InvestigationsController|\l|I + search()\l}"]
"Search::LabsController" [shape=Mrecord, label="{LabsController|\l|I + search()\l}"]
"Search::UsersController" [shape=Mrecord, label="{UsersController|\l|I + search()\l}"]
"Search::ZipcodesController" [shape=Mrecord, label="{ZipcodesController|\l|I + search()\l}"]
"Staff" [shape=Mrecord, label="{Staff|}"]
"Staff::AdverseEventsController" [shape=Mrecord, label="{AdverseEventsController|\l|I + index()\lI + create()\lI + show()\lI + close()\lI - patient_reports()\lI - get_data(report)\l}"]
"Staff::ApplicationController" [shape=Mrecord, label="{ApplicationController|\l|I + current_study()\lI + current_site()\l}"]
"Staff::HomeController" [shape=Mrecord, label="{HomeController|\l|I + index()\l}"]
"Staff::PatientsController" [shape=Mrecord, label="{PatientsController|\l|I + index()\lI + show()\lI + review_reports()\lI + lookup()\lI + edit()\lI + update()\lI + create()\lI + search()\lI - patient_details()\l}"]
"StatusController" [shape=Mrecord, label="{StatusController|\l|I + show()\l}"]
"TermsController" [shape=Mrecord, label="{TermsController|\l|I + index()\l}"]
"Test" [shape=Mrecord, label="{Test|}"]
"Test::ExporterTestController" [shape=Mrecord, label="{ExporterTestController|\l|I + index()\l}"]
"Test::ExternalController" [shape=Mrecord, label="{ExternalController|\l|I + show()\lI - check_environment()\l}"]
"Test::SessionsController" [shape=Mrecord, label="{SessionsController|\l|I + update()\lI - check_environment()\l}"]
"Test::SsoController" [shape=Mrecord, label="{SsoController|\l|I + index()\lI + edit()\lI + login()\lI - get_security_groups(user)\lI - attributes_statement()\lI - attributes_xml(attrs)\lI - attribute_xml(attr_name, values)\lI - check_environment()\lI - user_params()\lI + dump_all()\l}"]
"Test::ExporterTestHelper" [shape=Mrecord, label="{ExporterTestHelper|}"]
"TriggeredDocumentsController" [shape=Mrecord, label="{TriggeredDocumentsController|\l|I + download()\l}"]
"UserTypesController" [shape=Mrecord, label="{UserTypesController|\l|I + index()\lI + new()\lI + disabled()\lI + landing_page()\lI - assign_user_data()\lI - format_landing_page_links(links)\l}"]
"Users" [shape=Mrecord, label="{Users|}"]
"Users::OmniauthCallbacksController" [shape=Mrecord, label="{OmniauthCallbacksController|\l|I + saml()\lI + api_call(auth)\lI + devise_call(auth)\l}"]
"Users::ActivityLogger" [shape=Mrecord, label="{ActivityLogger|\l|I + reset_password_email_sent(of: = nil, by: = nil, status: = nil)\lI + account_disabled(of: = nil, by: = nil, request: = nil)\lI + account_success_confirmation(of: = nil, by: = nil, request: = nil)\lI + account_failure_confirmation(of: = nil, by: = nil, request: = nil)\lI + user_lms_request(result: = nil, of: = nil, key: = nil, by: = M3::CurrentController)\lI + user_data(user)\lI + user_roles(user)\l}"]
"ApplicationDecorator" [shape=Mrecord, label="{ApplicationDecorator|}"]
"GenericTriggerDecorator" [shape=Mrecord, label="{GenericTriggerDecorator|\l|I + report_items()\lI - normalize_report_items(data)\lI - normalize_adverse_events(data)\lI - map_to_report_items(drug, adverse_events, patient_details)\lI - combinations(drug_name, adverse_events, causalities, medical_condition)\lI - combination(drug_name, event_term, seriousness_term, causality, medical_condition)\lI - adverse_events_map(adverse_events)\lI - filter_seriousness(seriousness_map)\lI - filter_and_map_causalities(causalities)\lI - with_params(data, param1, param2, default = )\lI - medical_condition(patient_details)\lI - pregnant?(patient_details)\l}"]
"ReportDecorator" [shape=Mrecord, label="{ReportDecorator|\l|I + patient_details()\lI + reporter_details()\lI + additional_hcp_details()\lI + primary_suspect_product()\lI + adverse_events_empty?()\lI + additional_suspect_products_keys()\lI + additional_suspect_products()\lI + contact_details(person_type)\lI + suspect_product(product_type, product_key = nil)\lI + product_complaint()\lI | data(key, default =)\lI | t(key, scope)\lI | t_data(key, scope)\lI | t_consent_to_contact(type_namespace, person_type)\lI | prefix_scope()\lI | default_format()\lI | string_with_default(value, default =)\lI | array_with_default(value, default =)\lI | date_format(date_elements)\lI | time_format()\lI | format_date(date)\lI | format_time(time)\lI | hcp_name(type_namespace, person_type)\lI | reporter_type(type_namespace, person_type)\lI | primary_suspect_product?(product_type)\lI | manufacturer(type_namespace)\lI | expiry_date(type_namespace)\lI | code_number(type_namespace, code)\lI | lot_number(type_namespace)\lI | no_lot_number_reason(type_namespace)\lI | contact_country(person_type)\lI | contact_phone(type_namespace)\l}"]
"AuditLogListingFactory" [shape=Mrecord, label="{AuditLogListingFactory|}"]
"ClientDataForm" [shape=Mrecord, label="{ClientDataForm|}"]
"ConfigurationForm" [shape=Mrecord, label="{ConfigurationForm|S + build_from_config()\lS - get_config()\l|I + initialize(attributes = {})\lI + apply_defaults()\lI - persist!()\l}"]
"ContactCentreForm" [shape=Mrecord, label="{ContactCentreForm|S - attribute_map()\l|I + report_categories()\lI - triaged_reports?()\l}"]
"DataExportForm" [shape=Mrecord, label="{DataExportForm|}"]
"FollowUpForm" [shape=Mrecord, label="{FollowUpForm|}"]
"FormObject" [shape=Mrecord, label="{FormObject|\l|I + initialize(attributes = {})\lI + persisted?()\lI + save()\lI - persist!()\l}"]
"JourneysForm" [shape=Mrecord, label="{JourneysForm|S - attribute_map()\l|I - validate_document_option_caller()\lI - validate_document_option(type)\lI - validate_email_format()\l}"]
"LocalisationForm" [shape=Mrecord, label="{LocalisationForm|}"]
"PublicAccessForm" [shape=Mrecord, label="{PublicAccessForm|}"]
"SingleSignOnForm" [shape=Mrecord, label="{SingleSignOnForm|S + convert_security_groups()\lS - attribute_map()\l|I + runtime_params_string()\lI + security_groups_array()\lI - validate_runtime_params_json()\l}"]
"AdditionalDocsHelper" [shape=Mrecord, label="{AdditionalDocsHelper|\l|I + partial_by_type(type)\lI + file_name_with_download(report, file, doc, view_type)\lI - attachment_download_enabled?()\l}"]
"ApplicationHelper" [shape=Mrecord, label="{ApplicationHelper|\l|I + important_text(text)\lI + emphasise_text(text)\lI + present(object, klass = nil)\lI + render_header()\lI + render_footer()\lI + render_admin_nav()\lI + get_notices()\lI + error_messages_for(obj)\lI + self_reporting?(user_type, reporter)\lI + asset_url(asset)\lI + current_date()\lI + date_format(date)\lI + seconds_format(seconds)\lI + country_full_name(country_iso_code)\lI + link_to_previous(name, html_options = {}, block)\lI + all_countries()\lI + country_dropdown()\lI + country_list()\lI + language_list()\lI + language_checkbox_values()\lI + zipcode_enabled_countries()\lI + hcp_relationships_to_patient()\lI + contact_centre_relationships_to_patient()\lI + basic_relationships_to_patient(kind = nil)\lI + country_prefix_list()\lI + home_link(options = {})\lI + home_label()\lI + with_selected_locale()\lI + wrap_missing_translations(key, results)\lI + wrap_missing_translation(key, result)\lI + t_preview(key, params = {})\lI + legal_t(key, params = {})\lI + customer_configuration(key)\lI + child_journeys?(journey_position)\lI + child_journeys(journey_position)\lI + website_label()\lI + website_link()\lI + show_website_link?()\lI + header_link()\lI + show_header_link?()\lI + header_link_label()\lI + contact_us_label()\lI + contact_us_link()\lI + show_contact_us_label?()\lI + render_header_links()\lI + skip_header_link?(name)\lI + term_and_conditions_label()\lI + privacy_policy_label()\lI + imprint_label()\lI + contact_titles_preview()\lI + contact_titles()\lI + selected_locale_dropdown(path_proc)\lI + document_types()\lI + ethnicities()\lI + trigger_messages_preview()\lI + body_selector_enabled?()\lI + show_header_links?(current_user)\lI + show_language_selector?()\lI + default_from()\l}"]
"AuditLogListingsHelper" [shape=Mrecord, label="{AuditLogListingsHelper|\l|I + format_audit_log_listing_query(listing)\lI + format_entity_type(entry)\lI + audit_actions_list(keys)\lI + format_audit_key(key)\lI + format_clone_report_section(section_keys)\lI - format_user_audit_log(entry)\lI - format_report_audit_log(entry)\lI - format_site_audit_log(entry)\lI - format_reconciliation_audit_log(entry)\lI - format_study_audit_log(entry)\l}"]
"BodyMapHelper" [shape=Mrecord, label="{BodyMapHelper|\l|I + localised_body_part_category_name(unlocalised_name)\lI + localised_display_name(term)\lI + terms_for_category(value)\l}"]
"ConfigurationHelper" [shape=Mrecord, label="{ConfigurationHelper|S + format_display_to_user()\lS + format_display_on_report()\lS + format_trigger_info()\lS + format_trigger_message_info()\l|I + report_categories_checkbox_values()\lI + report_client_type_checkbox_values()\lI + drug_kind_values()\lI + drug_type_values()\lI + format_array_field(array)\lI + calculate_product_category(drug)\lI + get_languages()\lI + trigger_id_select_options(trigger)\lI + trigger_id_with_prefix(trigger_id)\lI + trigger_status_radio_options()\lI + trigger_location_options()\lI + user_types_options()\lI + format_country(code)\lI + format_configured_options_value(value, subproduct_types, product_type)\lI + e2b_ack_email_content()\lI + hours_to_hours_and_minute(hours)\lI + reporter_type_values()\lI + contact_centre_public_checkboxes()\lI + file_type_checkboxes()\lI + roles_checkboxes()\lI + case_processor_access_checkboxes()\lI + site_admin_access_checkboxes()\lI + client_admin_access_checkboxes()\lI + report_visibility_checkboxes()\lI + ae_listings_report_visibility_checkboxes()\lI + display_enabled(enabled)\lI + format_data_export_categories(categories)\lI + display_countries(countries)\lI + display_type(type)\lI + display_short_validation_message(field, validation)\lI + display_full_validation_message(field)\lI + display_validation_label(field)\lI + display_validation_params(validation)\lI + display_validation_categories(categories)\lI + display_params(params)\lI + brand_env_prefix()\lI + report_data_path()\lI + operational_data_path()\lI + aws_bucket()\l}"]
"DeviseHelper" [shape=Mrecord, label="{DeviseHelper|\l|I + devise_error_messages!()\l}"]
"FollowUpsHelper" [shape=Mrecord, label="{FollowUpsHelper|\l|I + follow_up_submit_buttons(report)\lI + contact_centre_follow_up_submit_buttons(report)\lI + public_follow_up_submit_buttons(report)\l}"]
"FormBuilder" [shape=Mrecord, label="{FormBuilder|\l|I + submit(label = nil, attrs = {})\lI + cancel(path = nil, attrs = {})\lI + custom_radio(method, label, value, attrs = {})\lI + custom_checkbox(method, label, attrs = {}, checked_value = 1, unchecked_value = 0)\lI + label(method, text = nil, attrs = {}, block)\lI + actions(attrs = {})\lI + text_field(method, options = {})\lI + email_field(method, options = {})\lI + text_area(method, options = {})\lI + password_field(method, options = {})\lI | add_length_attrs(method, attrs)\lI | add_required_marker(content)\lI | add_class_to_attrs(classes, attrs)\lI | is_required_field(field)\lI | find_validator(field, kind)\lI | has_validators?(field)\lI | maxlength(field, attrs)\lI | minlength(field)\l}"]
"FormTagHelper" [shape=Mrecord, label="{FormTagHelper|\l|I + horizontal_form_for(type, options = {})\lI + well_horizontal_form_for(type, options = {})\lI + form_tag(url_for_options = {}, options = {}, block)\lI + form_for(record, options = {}, block)\lI + cancel_button(path = nil, attrs = {})\lI + add_class_to_attrs(classes, attrs)\lI + submit_tag(value = save_changes, options = {}, block)\l}"]
"HorizontalFormBuilder" [shape=Mrecord, label="{HorizontalFormBuilder|\l|I + initialize(*)\lI + label(method, text = nil, attrs = {}, block)\lI + custom_label(text, attrs = {})\lI + control(type, method, attrs = {})\lI + multi_control(attrs = {})\lI + static_control(attrs = {})\lI + labeled_static_control(label, attrs = {})\lI + labeled_field(type, method, attrs = {})\lI + labeled_textarea(method, attrs = {})\lI + labeled_info(method, attrs = {})\lI + labeled_radios(method, values, attrs = {}, specific_attrs = {})\lI + labeled_checkboxes(method, values, attrs = {}, specific_attrs = {})\lI + labeled_selects(label_text, selects, attrs = {})\lI + group(tag = :div, attrs = {})\lI | pick_sizes(attrs = {})\l}"]
"InvestigationHelper" [shape=Mrecord, label="{InvestigationHelper|\l|I + title_with_range(title, investigation)\lI + investigations_endpoint(args)\l}"]
"ListingsHelper" [shape=Mrecord, label="{ListingsHelper|\l|I + format_reports(reports)\lI + resume_report_button(report)\lI + pagination_info(collection, options = {})\lI + display_manual_reconciliations(manual_reconciliations_list)\lI + format_state(report)\lI + format_range(from, to)\lI + site_study_html(site)\lI + format_suspect_medicines(report)\lI + format_contact_centre_listing_query(listing)\lI + format_listing_query(listing, options = {})\lI + format_user_for_conditions(user)\lI + format_date(date)\lI + format_site_name(id)\lI + format_date_without_utc(date)\lI + format_date_without_time(date)\lI + format_date_short_month_year(date)\lI + format_reconciliations(reconciliations)\lI + titleize_value(value)\lI + titleize_values(values)\lI + format_other_reference(report)\lI + patient_initials(report)\lI + csv_adverse_event_fields(report)\lI + adverse_event_fields(report)\lI + reconciliation_fields(reconciliation)\lI + case_listing_fields(cache_case_listing)\lI + format_age_unit(cache_case_listing)\lI + format_verbatim(term)\lI + format_event_date(cache_case_listing, date)\lI + format_start_date(value)\lI + format_product_load(kind)\lI + format_report_language(report)\lI + medical_history_formatter(cache_case_listing)\lI + format_serious_criteria(value)\lI + format_outcome(value)\lI + format_lot_number(value)\lI + format_serious(value)\lI + format_gender(gender)\lI + format_pregnant(event)\lI + format_other_conditions(other_conditions)\lI + format_medical_history_products(product_type)\lI + format_original_source(original_source)\lI + reconciliation_details(reconciliation)\lI + manual_reconciliation_details(manual_reconciliations)\lI + automated_reconciliation_details(automated_reconciliations)\lI + format_e2b_ack_status(e2b_ack)\lI + format_e2b_ack_receipt_date(e2b_ack)\lI + format_e2b_ack_comments(e2b_ack)\lI + format_time_taken(from, to)\lI + format_time_taken_in_hours_minutes(from, to)\lI + pc_ack_status(pc_ack)\lI + pc_ack_system_id(pc_ack)\lI + format_pc_ack_processed_date(pc_ack)\lI + pc_ack_error_messages(pc_ack)\lI + time_since_v1(report)\lI + logged_in_user_details(report)\lI + display_customer_category(report)\lI + report_categories(report)\lI + report_categories_translation(categories)\lI + localized_site_name(name)\lI + report_category_translation(category)\lI + format_meddra_high_level(htl)\lI + csv_heading()\lI + format_wildcard_condition(value)\lI + format_sites(sites)\lI + format_report_reconciliation_details(reconciliation_details)\lI + can_be_quality_reviewed?(report)\lI - qr_own_report?(report)\lI - get_e2b_ack(report)\lI - get_pc_ack(report)\lI - get_logged_in_user(report)\lI - display_quality_review_triage(triage_result)\lI - display_user_triage(triage_result)\lI - display_seriousness_triage(triggered)\lI - display_product_triage(triage_result)\lI - display_triggering_categories(product_categories)\lI - display_product_categories(product_categories)\lI - allow_clone_report?(report)\lI - allow_follow_up?(report)\lI - direct_association?(report)\lI - display_study_info_with_relation(report)\lI - display_study_info(report)\lI - space_separated_args(*args)\lI - display_generic_triggers(report)\lI - maybeDisplaySystem(email)\l}"]
"LocaleHelper" [shape=Mrecord, label="{LocaleHelper|\l|I + with_existing_locale(locale)\lI + find_locale(language)\l}"]
"ModalHelper" [shape=Mrecord, label="{ModalHelper|}"]
"ModalHelper::ModalBuilder" [shape=Mrecord, label="{ModalBuilder|\l|I + initialize(template)\lI + header()\lI + body(attrs = {})\lI + footer()\lI + close_button(label = &times;)\lI + cancel_button(label = cancel)\lI + yes_button(label = yes_no.y)\lI + title(content)\lI + modal(attrs = {})\l}"]
"PatientDetailsHelper" [shape=Mrecord, label="{PatientDetailsHelper|}"]
"ReportsFiltersHelper" [shape=Mrecord, label="{ReportsFiltersHelper|\l|I + site_options()\lI + all_sites()\lI + specified()\l}"]
"ReportsHelper" [shape=Mrecord, label="{ReportsHelper|S + get_formulation()\l|I + jump_to_menu_page_name()\lI + context_info_type()\lI + show_report_notification?()\lI + show_no_error_message?()\lI + show_trigger_notification?()\lI + additional_context_prepopulation(report, locale = :I18n)\lI + medical_info_prepopulation(report, locale = :I18n)\lI + product_complaint_prepopulation(report, locale = :I18n)\lI + show_confirmation_trigger?()\lI + follow_up_submit_title_text(report)\lI + follow_up_submit_subtitle_text(report)\lI + follow_up_submit_preamble_text(report)\lI + follow_up_submit_button_text(report)\lI + reference_info_extended(report)\lI + report_display_fields()\lI + report_history_fields()\lI + format_report_history_details(details)\lI + format_key(key)\lI + format_details_value(subject_key, value, details)\lI + format_journey_list(value)\lI + format_journey(journey)\lI + format_country_list(countries, details)\lI + format_ignore_redaction_settings(value, details)\lI + format_redaction_value(value)\lI + format_qr_value(value)\lI + format_qr_own_report(value)\lI + skip_qr_own_report_format?()\lI + format_site_list(sites, details)\lI + format_language(lang)\lI + format_enable_value(value)\lI + reasons_for_no_lot_number(selected)\lI + reasons_for_no_lot_number_values()\lI + seriousness_criteria(configured_criteria, toggle_death_details =)\lI + event_name(event)\lI + restore_dots(name)\lI + name_type(report_type)\lI + submitted_by(report)\lI + strip_utc(date)\lI + time_since(date)\lI + reporter_type(type)\lI + full_reporter_type_name(type)\lI + format_reporter_name(reporter_details)\lI + format_product_info(product)\lI + link_text(product)\lI + format_triggers(report, user_type, location)\lI + format_generic_triggers(trigger_sets, location)\lI + format_trigger_user_type(user_type)\lI + format_trigger_message(trigger)\lI + format_generic_trigger_message(trigger)\lI + report_reconciliation_details(reconciliation)\lI + display_reconciliation_details?(reconciliation, pdf)\lI + jump_to_links(report)\lI + fullname_from_user_id(user_id)\lI + show_zipcode_search_button?(selected_country_code)\lI + display_country_name(country_code)\lI + format_product_modal_title()\lI + display_medicine_with_country(name, country)\lI + format_investigation_unit(unit)\lI + show_product_purchase_country?()\lI + format_field_required_asterisk(report, field)\lI - unknown_not_provided(value)\lI - add_leading_zero(number)\lI - follow_up_submit_generic_text(report, text_type)\lI - display_error_with_link(report, page)\lI - display_trigger_names(triggers)\lI - display_text_with_hard_return(text)\lI - summary_term_and_conditions_header(current_user)\lI - display_document_type?(doc)\lI - display_document_upload_type?(doc)\lI - upload_class_icon(doc)\lI - redaction_tooltip(doc)\lI - valid_redacted_pair?(doc)\lI - redaction_disabled?(doc)\lI - site_admin_for_report?(report)\lI - t_prepopulation(key, report, locale = :I18n)\l}"]
"SearchHelper" [shape=Mrecord, label="{SearchHelper|\l|I + display_criteria_list(criteria)\lI + display_customer_categories(categories)\lI + display_report_statuses(statueses)\lI + display_report_status(status)\lI + display_customer_category(category)\lI + display_report_category(category)\l}"]
"SessionFormBuilder" [shape=Mrecord, label="{SessionFormBuilder|\l|I + initialize(*)\l}"]
"SiteHelper" [shape=Mrecord, label="{SiteHelper|\l|I + show_recipients(notification, site_list)\lI + show_trigger_criteria(notification)\lI + show_pdf_format(notification)\lI + show_edit_actions(site, notification)\lI + show_remove_actions(site, notification)\lI + show_email_template(notification, email_template_list)\lI + show_email_template_list(email_templates)\lI - email_template_format(t)\lI - add_to(notification, site_list)\lI - add_cc(notification, site_list)\lI - add_bcc(notification, site_list)\lI - add_seriousness(notification)\lI - add_report_status(notification)\lI - add_report_categories(notification)\lI - add_customer_category(notification)\l}"]
"SummaryHelper" [shape=Mrecord, label="{SummaryHelper|\l|I + contact_centre_agent_sites(report)\lI + display_batch_info(batch, expiry)\lI + display_uncertain_value(value, provided)\lI + display_uncertain_date(date, provided)\lI + display_date_range(from, to, default = )\lI + display_date(date)\lI + display_other_value(value, other_value)\lI + display_title_subtitle(title, subtitle)\lI + display_sex(sex)\lI + display_height(height)\lI + display_weight(weight)\lI + display_boolean(value, scope = :yes_no)\lI + display_patient_consent(value)\lI + display_country(country_iso)\lI + display_relationship(relationship)\lI + display_causality(causality_values)\lI + display_single_choice(value, scope)\lI + display_multiple_choice(values, scope)\lI + string_list(names)\lI + format_summary_value(value)\lI + category_toggle_value(report, category)\lI + show_upload_document_title(report, type)\l}"]
"UsersHelper" [shape=Mrecord, label="{UsersHelper|\l|I + complete_name(user)\lI + user_for_audit_log(user)\lI + user_locked_active(user)\lI + user_status(user)\lI + user_source(user)\lI + user_identifier(user)\lI + user_account_status(user)\lI + user_management_page?()\lI + buttons_visible(user, current_user)\lI + enable_link(user)\lI + disable_link(user, current_user)\lI + unlock_link(user)\lI + resend_email_checkbox()\lI + format_roles_site(role)\lI + log_user_roles(user)\lI + format_user_type(type)\lI + lms_group_name(user)\lI + lms_status(user)\lI - disabled_lms_status()\l}"]
"WellHelper" [shape=Mrecord, label="{WellHelper|}"]
"WellHelper::WellBuilder" [shape=Mrecord, label="{WellBuilder|\l|I + initialize(template)\lI + info_list()\lI + info(label, value, label_size = 5, control_size = 7)\lI + horizontal_well(tag = :div)\l}"]
"AckMonitorEmailJob" [shape=Mrecord, label="{AckMonitorEmailJob|\l|I + perform(*args)\l}"]
"AdminReportingEmailJob" [shape=Mrecord, label="{AdminReportingEmailJob|\l|I + perform(*args)\l}"]
"E2bGenerateJob" [shape=Mrecord, label="{E2bGenerateJob|\l|I + perform(*args)\l}"]
"ExportManifestJob" [shape=Mrecord, label="{ExportManifestJob|\l|I + perform(*args)\l}"]
"PcGenerateJob" [shape=Mrecord, label="{PcGenerateJob|\l|I + perform(*args)\l}"]
"PdfGenerateJob" [shape=Mrecord, label="{PdfGenerateJob|\l|I + perform(*args)\l}"]
"ReconciliationSearchEmailJob" [shape=Mrecord, label="{ReconciliationSearchEmailJob|\l|I + perform(*args)\l}"]
"ReportCreateCaseListingJob" [shape=Mrecord, label="{ReportCreateCaseListingJob|\l|I + perform(*args)\l}"]
"ReportReconciliationCacheFieldsJob" [shape=Mrecord, label="{ReportReconciliationCacheFieldsJob|\l|I + perform(*args)\l}"]
"SiteNotificationGenerateJob" [shape=Mrecord, label="{SiteNotificationGenerateJob|\l|I + perform(*args)\l}"]
"ConfirmationMailer" [shape=Mrecord, label="{ConfirmationMailer|\l|I + send_confirmation_email(report, email)\lI + format_content(report, content)\l}"]
"DeviseMailer" [shape=Mrecord, label="{DeviseMailer|\l|I + confirmation_instructions(user, token, opts = {})\lI + reset_password_instructions(user, token, opts = {})\l}"]
"E2bAckMailer" [shape=Mrecord, label="{E2bAckMailer|\l|I + send_received_notification_email(email, content, cc_email)\lI + send_not_received_notification_email(email, content)\lI - send_notification_email(email, subject, content, cc_email = nil)\l}"]
"ListingMailer" [shape=Mrecord, label="{ListingMailer|\l|I + send_report(serialized_report, email, type)\lI + send_attached_csv(attachment, email, type)\lI + send_attached_xlsx(attachment, email, type)\lI - send_attached(attachment, ext, email, type)\l}"]
"ReportNotificationMailer" [shape=Mrecord, label="{ReportNotificationMailer|\l|I + send_report_reminder_email(report)\lI + format_content(content, report)\l}"]
"SiteNotificationMailer" [shape=Mrecord, label="{SiteNotificationMailer|\l|I + send_notification(notification, report)\lI + format_content(content, report, type = default)\lI + process_email_address(type, site_id)\lI + all_site_users(site)\lI + format_email_address(to_email, cc_email, bcc_email)\lI + log_activity(report, params)\l}"]
"DbCheckerMiddleware" [shape=Mrecord, label="{DbCheckerMiddleware|\l|I + initialize(app)\lI + call(env)\lI + _call(env)\l}"]
"LmtPathNormalizerMiddleware" [shape=Mrecord, label="{LmtPathNormalizerMiddleware|\l|I + initialize(app)\lI + call(env)\lI + _call(env)\lI - lmt_uri?(paths)\lI - downcase_lmt_part(path)\l}"]
"M3CustomSSLMiddleware" [shape=Mrecord, label="{M3CustomSSLMiddleware|\l|I + call(env)\l}"]
"Abilities" [shape=Mrecord, label="{Abilities|}"]
"Abilities::ClientAdmin" [shape=Mrecord, label="{ClientAdmin|\l|I + initialize(user)\lI + client_admin_role(user)\lI + client_admin_untrained(user)\lI - sso_enabled?()\lI - client_admin_access?(section)\l}"]
"Abilities::M3Admin" [shape=Mrecord, label="{M3Admin|\l|I + initialize(user)\lI + admin_role()\l}"]
"Abilities::SiteUser" [shape=Mrecord, label="{SiteUser|\l|I + initialize(user, site_id = nil)\lI + site_user(user, site_id)\lI + site_user_untrained(user, site_id)\lI + site_user_affiliate()\lI + site_user_operative()\lI + site_user_quality_reviewer()\lI + site_user_affiliate_admin()\lI + site_user_site_admin()\lI + site_user_read_only_admin()\lI + site_user_case_processor()\lI + site_user_translator()\lI - contact_centre_ability()\lI - contact_centre_read_access()\lI - sso_enabled?()\lI - case_processor_access?(section)\lI - case_processor_read?()\lI - site_admin_access?(section)\lI - quality_review_access?(role)\lI - user_sites(role)\lI - quality_review_reports(sites)\l}"]
"Ability" [shape=Mrecord, label="{Ability|S + ability_for()\l|I + training_needed?(user)\l}"]
"AccessRight" [shape=Mrecord, label="{AccessRight|\l|I + validate_access_right(role)\l}"]
"AdverseEvent" [shape=Mrecord, label="{AdverseEvent|}"]
"Anonymous" [shape=Mrecord, label="{Anonymous|}"]
"Attachment" [shape=Mrecord, label="{Attachment|S + max_file_size()\l|I + set_uuid()\lI + to_jq_upload()\lI + file_size()\lI + generate_token()\l}"]
"BodyMap" [shape=Mrecord, label="{BodyMap|}"]
"BodyMap::PartCategory" [shape=Mrecord, label="{PartCategory|}"]
"PartCategory::BodyMap::Translation" [shape=Mrecord, label="{Translation|}"]
"BodyMap::Term" [shape=Mrecord, label="{Term|}"]
"Term::BodyMap::Translation" [shape=Mrecord, label="{Translation|}"]
"ClientAdmin" [shape=Mrecord, label="{ClientAdmin|\l|I + home_path()\lI + lms_learning_group()\lI + lms_learning_group_with_role()\l}"]
"ClientAdmin::ApplicationController" [shape=Mrecord, label="{ApplicationController|}"]
"ContactCentreReport" [shape=Mrecord, label="{ContactCentreReport|S - initial_state()\l|I + state_machine()\lI + post_initialize()\lI + clean_up!()\lI + submit!()\lI + logged_in_user()\lI + can_be_resumed?(site_admin_id, current_user)\lI + previous_version_user_email()\lI + set_company_aware_date(date)\lI + needs_qr?()\lI + serious?()\lI + can_be_followed_up?()\lI + can_be_cloned?()\lI - update_state_machine(state_machine)\lI - set_review()\lI - translation_to_english_enabled?()\lI - site_translation_enabled?()\lI - needs_translation?()\lI - change_site_user(site_user_id)\lI - update_priority_seriousness()\lI - get_seriousness_values()\l}"]
"Country" [shape=Mrecord, label="{Country|S + flush_cache()\lS + complete_list()\lS + restricted_list()\lS + cached_countries()\lS + ordered_alphabetically()\lS + ordered_by_sort_id()\l|I + name()\l}"]
"CronJobs" [shape=Mrecord, label="{CronJobs|}"]
"CustomCounter" [shape=Mrecord, label="{CustomCounter|}"]
"CustomerConfiguration" [shape=Mrecord, label="{CustomerConfiguration|S + fetch_all()\lS + find_by_key()\lS + disable_cache()\lS + enable_cache()\lS - cached_customer_configuration()\lS - cache_expired()\l|I - flag_changes()\l}"]
"Drug" [shape=Mrecord, label="{Drug|\l|I - generate_hash_id()\l}"]
"DrugsIndication" [shape=Mrecord, label="{DrugsIndication|}"]
"DrugsTrigger" [shape=Mrecord, label="{DrugsTrigger|}"]
"EmailTemplate" [shape=Mrecord, label="{EmailTemplate|}"]
"FollowUpLoginAttempt" [shape=Mrecord, label="{FollowUpLoginAttempt|}"]
"GenericTrigger" [shape=Mrecord, label="{GenericTrigger|}"]
"Investigation" [shape=Mrecord, label="{Investigation|S + liver_biochemical_tests()\lS + virology_tests()\lS + hepatic_imaging_and_liver_biopsy()\lS + convulsions()\lS + cardiac_rhythm()\lS + autoantibodies_for_immunologic_studies()\lS + find_tests()\lS + meddra_codes_for()\l|I + limits()\lI + units()\lI + tag()\lI + label()\lI + clear_normal_ranges()\l}"]
"JourneyTrigger" [shape=Mrecord, label="{JourneyTrigger|}"]
"LibraryVersion" [shape=Mrecord, label="{LibraryVersion|}"]
"M3Admin" [shape=Mrecord, label="{M3Admin|\l|I + home_path()\l}"]
"Meddra" [shape=Mrecord, label="{Meddra|}"]
"Meddra::ColloquialTerm" [shape=Mrecord, label="{ColloquialTerm|}"]
"Meddra::HighLevelGroupTerm" [shape=Mrecord, label="{HighLevelGroupTerm|}"]
"Meddra::HighLevelGroupTermHighLevelTermComposition" [shape=Mrecord, label="{HighLevelGroupTermHighLevelTermComposition|}"]
"Meddra::HighLevelTerm" [shape=Mrecord, label="{HighLevelTerm|}"]
"Meddra::HighLevelTermPreferredTermComposition" [shape=Mrecord, label="{HighLevelTermPreferredTermComposition|}"]
"Meddra::Language" [shape=Mrecord, label="{Language|}"]
"Meddra::LowLevelTerm" [shape=Mrecord, label="{LowLevelTerm|}"]
"Meddra::PreferredTerm" [shape=Mrecord, label="{PreferredTerm|}"]
"Meddra::SocHighLevelGroupTermComposition" [shape=Mrecord, label="{SocHighLevelGroupTermComposition|}"]
"Meddra::SocTerm" [shape=Mrecord, label="{SocTerm|}"]
"Patient" [shape=Mrecord, label="{Patient|\l|I + date_of_birth()\l}"]
"ProductCategory" [shape=Mrecord, label="{ProductCategory|S + with_category()\lS + no_category()\lS + non_client_category()\lS + reload_from_config()\l|I + review_message()\lI + trigger?()\l}"]
"Report" [shape=Mrecord, label="{Report|S + allowed_categories()\lS + original()\lS + follow_ups_submitted()\lS + first_submitted()\lS + latest_submitted()\lS + latest_submitted_or_awaiting_review()\lS + cast_report()\lS + prepare_report_for_archiving()\lS - transition_class()\lS - initial_state()\l|I + state_machine()\lI + validate()\lI + clean_full_error_messages()\lI + mark_as_validated()\lI + report_id()\lI + logged_in_user()\lI + to_param()\lI + linked_report()\lI + study_medicines()\lI + previous_versions()\lI + selected_study_medicines()\lI + adverse_event?()\lI + adverse_event_toggle?()\lI + reporter()\lI + reporter_name()\lI + submitted_by()\lI + set_reporter_details(reporter_details)\lI + update_medical_context(medical_context_params, category)\lI + update_categories()\lI + archive_follow_up_reporter()\lI + store_follow_up_login_attempt(ip_address, success)\lI + follow_up_reports()\lI + reset_lock!()\lI + common_format()\lI + company_aware_date()\lI + previous_version_created_at()\lI + previous_version_submitted_at()\lI + reconciliation()\lI + [](key)\lI + []=(key, value)\lI + data_source()\lI + additional_docs()\lI + data=(params)\lI + data()\lI + set_page_data(atts)\lI + clean_page_attributes(atts)\lI + validate_modules()\lI + validate_supplemental_journey()\lI + clear_supplemental_data()\lI + save_sections(page, sections_data)\lI + save_page_data(atts)\lI + journey()\lI + trait(name)\lI + write_trait(name, value)\lI + hcp?()\lI + botox?()\lI + amendment?()\lI + is_review?()\lI + can_be_followed_up?()\lI + can_be_cloned?()\lI + lock_follow_up!()\lI + unlock_follow_up!()\lI + third_person_reporter?()\lI + drug_names()\lI + primary_drug()\lI + drug_names_with_countries()\lI + drugs()\lI + drug_name_and_country(drug_data)\lI + format_drug_purchased_country()\lI + process_qr_attachments()\lI + set_drug_country_to_unknown(drug)\lI + copy_attachment(id)\lI + cosuspect_drug_names()\lI + other_drug_names()\lI + has_medications?()\lI + has_concomitant_medications?()\lI + has_supplimental_journey?(type = nil)\lI + full_report_type()\lI + triggering_event_name()\lI + triggers()\lI + priority?()\lI + error_messages()\lI + warning_messages()\lI + required_fields_error_messages()\lI + adverse_event_names()\lI + become_latest()\lI + abandon(reason = Auto Routed)\lI + original_company_aware_date()\lI + log_state(to)\lI - default_customer_category()\lI - log_report_created()\lI - owner()\lI - create_reconciliation()\lI - save_investigation_settings()\lI - contact_centre_reporter(data)\lI - registered_contact_centre_reporter()\lI - generic_contact_centre_reporter()\lI - map_details(details)\lI - map_follow_up_reporter_history(data)\lI - map_follow_up_reporter(data)\lI - follow_up_reporter(data)\lI - clean_unknown_dates()\lI - journey_trigger(type = nil)\lI - create_reference()\lI - generate_unique_reference()\lI - create_authorisation_code()\lI - mark_old_reports()\lI - set_consent_value()\l}"]
"Report::Data" [shape=Mrecord, label="{Data|\l|I + [](key)\lI + []=(key, value)\lI + fetch(key)\lI + store(key, value)\lI + merge!(hsh)\lI + clean!()\lI + clean_forward!()\lI + blank?()\lI + changed?()\lI + path(suffix = nil)\lI + values()\lI + ==(other)\lI + inspect()\lI + method_missing(sym, *args)\lI + each()\lI + to_s()\lI + to_str()\lI + to_i()\lI + errors()\l}"]
"Data::Report::Errors" [shape=Mrecord, label="{Errors|\l|I + full_messages()\lI + [](method)\lI + delete(method)\lI - deleted()\l}"]
"ReportAcknowledgement" [shape=Mrecord, label="{ReportAcknowledgement|\l|I + status()\lI + successful?()\lI + external_system()\lI + update_reconciliation()\l}"]
"ReportAttribute" [shape=Mrecord, label="{ReportAttribute|}"]
"ReportReconciliation" [shape=Mrecord, label="{ReportReconciliation|S + history()\l|I + manual_reconciliations_list()\lI + update_reconciliation_details()\lI + auto_reconciliation_enable?(service)\lI + get_reconciliation_details()\lI + push_manual_reconciliation(data)\lI - fix_nil_manual_reconciliations()\l}"]
"ReportStateTransition" [shape=Mrecord, label="{ReportStateTransition|}"]
"Reports" [shape=Mrecord, label="{Reports|}"]
"Reports::AuditLogListing" [shape=Mrecord, label="{AuditLogListing|\l|I + initialize(attributes = {})\lI + initial_relation()\lI + order(relation)\l}"]
"Reports::CacheCaseListing" [shape=Mrecord, label="{CacheCaseListing|}"]
"Reports::CaseListing" [shape=Mrecord, label="{CaseListing|\l|I + initialize(attributes = {})\lI + initial_relation()\lI + order(relation)\lI + start_date()\lI + end_date()\lI + to_csv()\lI - initially_created_conditions(relation)\lI - reference_conditions(relation)\lI - sites_conditions(relation)\l}"]
"Reports::ContactCentreListing" [shape=Mrecord, label="{ContactCentreListing|\l|I + initialize(attributes = {}, current_user)\lI + initial_relation()\lI + order(relation)\lI + filter_sites()\lI - report_owner_conditions(relation)\lI - reconciliation_reference_conditions(relation)\lI - age_conditions(relation)\lI - date_of_birth_conditions(relation)\lI - reporter_firstname_conditions(relation)\lI - reporter_surname_conditions(relation)\lI - reporter_city_conditions(relation)\lI - reporter_state_county_conditions(relation)\lI - reporter_country_conditions(relation)\lI - suspect_product_conditions(relation)\lI - sites_conditions(relation)\lI - access_rights()\lI - site_access()\lI - all_site_access_ids()\lI - filter_site_access_ids()\lI - or_operator(modules, attribute_path)\lI - reporter_details_query(attribute_path)\lI - json_field(attribute_path)\l}"]
"Reports::DrugListing" [shape=Mrecord, label="{DrugListing|\l|I + initialize(attributes = {})\lI + search(page = nil)\lI + initial_relation()\lI + order(relation)\lI - product_country()\lI - country_list_with_world()\lI - product_without_country(page)\lI - filter_fields_sql(property, field_name, default_value = )\lI - prepare_where_clause()\lI - prepare_attributes()\l}"]
"Reports::Listing" [shape=Mrecord, label="{Listing|S + send_as_email()\lS - report_details()\lS - format_date()\lS - format_time_taken()\lS - logged_in_user_details()\l|I + initialize(attributes = {})\lI + persisted?()\lI + reports(page = nil)\lI + to_csv()\lI + to_xlsx()\lI + statuses_list()\lI - get_data(page = nil)\lI - prepare_version()\lI - prepare_wildcard_query(value)\l}"]
"Reports::QualityReviewListing" [shape=Mrecord, label="{QualityReviewListing|\l|I + initialize(attributes = {})\lI + initial_relation()\lI + order(relation)\lI - priority_conditions(relation)\lI - categories_conditions(relation)\l}"]
"Reports::ReconciliationsListing" [shape=Mrecord, label="{ReconciliationsListing|S + send_as_email()\l|I + initialize(attributes = {})\lI + initial_relation()\lI + order(relation)\lI + start_date()\lI + end_date()\lI + to_csv()\lI + to_xlsx()\lI - csv_keys_to_reject()\lI - initially_created_conditions(relation)\lI - contact_centre_reference_conditions(relation)\lI - reference_conditions(relation)\lI - reconciliation_reference_conditions(relation)\lI - categories_conditions(relation)\lI - reconciliation_status_conditions(relation)\lI - sites_conditions(relation)\lI - report_type_conditions(relation)\l}"]
"Reports::ReportListing" [shape=Mrecord, label="{ReportListing|\l|I + initialize(attributes = {}, current_user)\lI + initial_relation()\lI + order(relation)\lI + to_json(report)\lI + filter_sites()\lI + filter_countries()\lI + seriousness(report)\lI + patient_initials(report)\lI - access_rights()\lI - site_access()\lI - all_site_access_ids()\lI - filter_site_access_ids()\lI - country_access()\lI - public_report_access()\lI - site_and_country_filter_conditions(relation)\lI - all_countries_query(relation, sites, country_code)\lI - specified_countries_query(relation, sites, country_code)\lI - no_countries_query(relation, sites, country_code)\lI - site_user_filter_conditions(relation)\lI - reference_filter_conditions(relation)\l}"]
"Reports::SiteListing" [shape=Mrecord, label="{SiteListing|\l|I + initialize(attributes = {})\lI + order(relation)\lI + to_json(site)\lI - name_conditions(relation)\lI - countries_query(pattern)\l}"]
"Reports::StudyListing" [shape=Mrecord, label="{StudyListing|\l|I + initialize(attributes = {})\lI + order(relation)\lI + to_json(study)\lI - study_filter_conditions(relation)\l}"]
"Reports::UserListing" [shape=Mrecord, label="{UserListing|\l|I + initialize(attributes = {}, current_user)\lI + initial_relation()\lI + order(relation)\lI + to_json(user)\lI + to_elm_json(user)\lI - user_filter_conditions(relation)\lI - site_name_conditions(relation)\lI - roles_conditions(relation)\lI - show_disabled_conditions(relation)\lI - map_array(field)\lI - filter_array(field)\l}"]
"Reports::ActivityLogger" [shape=Mrecord, label="{ActivityLogger|\l|I + additional_doc_upload_success(of: = nil, by: = nil, doc_type: = nil)\lI + additional_doc_upload_failure(of: = nil, by: = nil, doc_type: = nil)\lI + additional_doc_delete_success(of: = nil, by: = nil, doc_type: = nil)\lI + additional_doc_delete_failure(of: = nil, by: = nil, doc_type: = nil)\lI + additional_doc_update_success(of: = nil, by: = nil, doc_type: = nil)\lI + additional_doc_update_failure(of: = nil, by: = nil, doc_type: = nil)\lI + attachment_upload_success(of: = nil, by: = nil, attachment: = nil)\lI + attachment_upload_failure(of: = nil, by: = nil, attachment: = nil)\lI + attachment_delete_success(of: = nil, by: = nil, attachment: = nil)\lI + attachment_delete_failure(of: = nil, by: = nil, attachment: = nil)\lI + attachment_download_success(of: = nil, by: = nil, attachment: = nil)\lI + attachment_download_failure(of: = nil, by: = nil, attachment: = nil)\lI + hide_additional_doc_success(of: = nil, by: = nil)\lI + activity_params(of, by, additional_params)\lI + attachment_data(attachment)\l}"]
"Site" [shape=Mrecord, label="{Site|S + localized_name()\l|I + validate_email_list()\lI + validate_shared_sites()\lI + validate_public_report_access_countries()\lI + validate_learning_groups()\lI + allow_pdf_download?()\lI + allow_reporting?()\lI + localized_name()\lI - validate_translation_settings()\l}"]
"SiteNotification" [shape=Mrecord, label="{SiteNotification|}"]
"SiteStaff" [shape=Mrecord, label="{SiteStaff|}"]
"SiteUser" [shape=Mrecord, label="{SiteUser|S + access_rights()\lS + access_rights_by_site()\l|I + access_rights_by_site(site_id)\lI + site_ids_by_roles(roles)\lI + has_roles?(roles)\lI + access_rights_map()\lI + has_operative_role?()\lI + has_administrative_role?()\lI + allow_pdf_generation()\lI + sites_to_report()\lI + home_path()\lI + can_create_report?()\l}"]
"SpontaneousReport" [shape=Mrecord, label="{SpontaneousReport|\l|I + clean_up!()\lI + submit!()\lI + set_reporter_type()\lI + set_who_affected_value()\l}"]
"StateMachines" [shape=Mrecord, label="{StateMachines|}"]
"StateMachines::DefaultReportStateMachine" [shape=Mrecord, label="{DefaultReportStateMachine|}"]
"StateMachines::QualityReviewStateMachine" [shape=Mrecord, label="{QualityReviewStateMachine|}"]
"StateMachines::TranslationStateMachine" [shape=Mrecord, label="{TranslationStateMachine|}"]
"Study" [shape=Mrecord, label="{Study|\l|I + save_with_sites(site_ids)\lI + study_medicines()\lI + can_create_report?()\lI + can_follow_up?()\lI - create_reference()\lI - assemble_study_medicines()\lI - all_sites_available(site_ids)\l}"]
"StudyIndication" [shape=Mrecord, label="{StudyIndication|}"]
"StudyReport" [shape=Mrecord, label="{StudyReport|\l|I + clean_up!()\lI + submit!()\lI + logged_in_user()\lI - pre_populate_details()\lI - pre_populate_patient_details()\lI - pre_populate_reporter_details()\l}"]
"StudySite" [shape=Mrecord, label="{StudySite|}"]
"System" [shape=Mrecord, label="{System|}"]
"TemporaryValue" [shape=Mrecord, label="{TemporaryValue|}"]
"Trigger" [shape=Mrecord, label="{Trigger|\l|I + has_target?()\l}"]
"TriggerTerm" [shape=Mrecord, label="{TriggerTerm|}"]
"User" [shape=Mrecord, label="{User|S + system_user()\lS + anonymous_user()\lS + order_by_name()\lS + verified_user?()\l|I + save_with_access_rights(user_class, user_access_rights)\lI + update_with_access_rights(user_details, user_class, user_access_rights)\lI + validate_with_access_rights(user_class, user_access_rights)\lI + validate_user_role(user_class, user_access_rights)\lI + validate_exclusive_roles(user_access_rights)\lI + validate_exclusive_learning_group(user_access_rights)\lI + access_rights=(user_access_rights)\lI + password_required?()\lI + lock_access!(opts = {})\lI + name()\lI + enable!()\lI + disable!()\lI + access_locked?()\lI + unlock!()\lI + enabled?()\lI + active_for_authentication?()\lI + inactive_message()\lI + check_password(password)\lI + sso_user?()\lI + home_path()\lI + type_key()\lI + password_match?()\lI + attempt_set_password(params)\lI + has_no_password?()\lI + only_if_unconfirmed()\lI + language()\lI + activated_in_lms?()\lI + lms_learning_group()\lI + lms_learning_group_with_role()\lI + assigned_to_lms_group?()\lI | confirmation_required?()\lI - ip_address()\lI - update_user_availability(available)\lI - register_in_lms()\lI - update_in_lms()\lI - need_update_in_lms()\lI - need_creation_in_lms()\lI - update_lms_user_availability(available)\lI - assert_update_lms_result_success(lms_response)\lI - assert_create_lms_result_success(lms_response)\lI - handle_lms_result_error(result)\lI - get_lms_learning_group(sites_per_role)\lI - get_sites_per_role()\l}"]
"UserType" [shape=Mrecord, label="{UserType|\l|I + initialize(key, drug)\l}"]
"Zipcode" [shape=Mrecord, label="{Zipcode|}"]
"BasePresenter" [shape=Mrecord, label="{BasePresenter|S + presents()\l|I + initialize(object, template)\lI + method_missing(*args, block)\l}"]
"UserTypePresenter" [shape=Mrecord, label="{UserTypePresenter|\l|I + title()\lI + preamble()\lI + about_you_subtitle()\lI + language_subtitle()\lI + country_information()\l}"]
"AcknowledgementMonitorService" [shape=Mrecord, label="{AcknowledgementMonitorService|}"]
"AttachmentFromDocExtractor" [shape=Mrecord, label="{AttachmentFromDocExtractor|}"]
"AuthenticationService" [shape=Mrecord, label="{AuthenticationService|}"]
"CheckStatus" [shape=Mrecord, label="{CheckStatus|\l|I + all?()\lI + db?()\lI + meddra_files?()\lI + meddra_data?()\lI + colloquial_terms?()\lI + customer_configuration?()\l}"]
"ContactCentreService" [shape=Mrecord, label="{ContactCentreService|}"]
"CountryService" [shape=Mrecord, label="{CountryService|}"]
"CustomerConfigurationService" [shape=Mrecord, label="{CustomerConfigurationService|}"]
"E2bService" [shape=Mrecord, label="{E2bService|}"]
"ExportManifestService" [shape=Mrecord, label="{ExportManifestService|}"]
"ExportService" [shape=Mrecord, label="{ExportService|}"]
"FrontendConfigurationService" [shape=Mrecord, label="{FrontendConfigurationService|}"]
"GenericTriggerService" [shape=Mrecord, label="{GenericTriggerService|}"]
"IntermediateReportService" [shape=Mrecord, label="{IntermediateReportService|}"]
"LmsService" [shape=Mrecord, label="{LmsService|}"]
"MedicineService" [shape=Mrecord, label="{MedicineService|}"]
"PdfService" [shape=Mrecord, label="{PdfService|}"]
"PdfService::PdfRenderer" [shape=Mrecord, label="{PdfRenderer|\l|I + render_pdf(report)\l}"]
"ProductComplaintService" [shape=Mrecord, label="{ProductComplaintService|}"]
"QualityReviewService" [shape=Mrecord, label="{QualityReviewService|}"]
"ReconciliationService" [shape=Mrecord, label="{ReconciliationService|}"]
"ReportAdditionalDocsService" [shape=Mrecord, label="{ReportAdditionalDocsService|S + generate_attachment_id()\lS + available_document_types()\lS + redaction_enabled?()\l|I + initialize(report, doc_params = nil, current_user = nil)\lI + add_additional_docs()\lI + delete_additional_doc(doc_id)\lI + update_additional_doc(doc_id)\lI + hide_additional_document(doc_id)\lI - update_attachments(doc_id)\lI - save_additional_docs(report)\lI - available_types()\lI - additional_doc_params(additional_doc_id)\lI - upload_attachments(additional_doc_id)\lI - upload_attachment(document, additional_doc_id, doc_type)\lI - delete_attachments_by_type(doc_type, doc_id)\lI - delete_attachment(attachment)\l}"]
"ReportAttachmentDownloader" [shape=Mrecord, label="{ReportAttachmentDownloader|\l|I + initialize(report_id, additional_doc_id, redacted, user)\lI + download_before_submit()\lI + download()\lI - not_permitted_error()\lI - not_found_error()\lI - downloadable?()\lI - report()\lI - attachment()\lI - additional_doc()\lI - read_file()\l}"]
"ReportJourneyService" [shape=Mrecord, label="{ReportJourneyService|}"]
"ReportMonitorService" [shape=Mrecord, label="{ReportMonitorService|}"]
"ReportService" [shape=Mrecord, label="{ReportService|}"]
"SiteService" [shape=Mrecord, label="{SiteService|}"]
"StudyService" [shape=Mrecord, label="{StudyService|}"]
"TestSsoService" [shape=Mrecord, label="{TestSsoService|}"]
"TriggerService" [shape=Mrecord, label="{TriggerService|}"]
"UserService" [shape=Mrecord, label="{UserService|\l|I + categories_allowed?()\lI + category_list()\lI + categories()\lI + default_category()\lI + deactivate_inactive_users()\lI + update_lms_status(lms_user_id, status)\lI + fetch_lms_status(lms_user_id)\lI + user_site_list(user, role)\lI + user_role_list(user, role_type)\lI + base_user_sites(user)\lI + quality_reviewer_sites(sites)\lI + translator_sites(sites)\lI + allowed_user_roles(user)\lI + allow_quality_reviewer_role(user, roles)\lI + allow_translator_role(user, roles)\l}"]
"AttachmentUploader" [shape=Mrecord, label="{AttachmentUploader|\l|I + store_dir()\lI + filename()\lI + extension_white_list()\l}"]
"AdminPasswordValidator" [shape=Mrecord, label="{AdminPasswordValidator|\l|I + validate_each(object, attribute, value)\l}"]
"EmailValidator" [shape=Mrecord, label="{EmailValidator|S + validate()\l|I + validate_each(object, attribute, value, params = {})\l}"]
"InitialReportValidator" [shape=Mrecord, label="{InitialReportValidator|}"]
"ReportValidator" [shape=Mrecord, label="{ReportValidator|S + need_to_validate()\lS + add_error_to_report()\lS + validation_message_for()\lS - default_translation_params()\lS - display_enabled_categories()\l|I + validate(record)\lI - validate_attachment(record)\lI - validate_additional_doc(record)\lI - validate_report_type(record)\lI - validate_call_reference(record)\lI - validate_site(record)\lI - validate_summary_page(record)\l}"]
"StandardError" [shape=Mrecord, label="{StandardError|}"]
"Cell::Base" [shape=Mrecord, label="{Base|}"]
"ArgumentError" [shape=Mrecord, label="{ArgumentError|}"]
"Struct" [shape=Mrecord, label="{Struct|}"]
"Helpers::ActionView::FormBuilder" [shape=Mrecord, label="{FormBuilder|}"]
"Devise::ConfirmationsController" [shape=Mrecord, label="{ConfirmationsController|}"]
"Devise::PasswordExpiredController" [shape=Mrecord, label="{PasswordExpiredController|}"]
"Devise::PasswordsController" [shape=Mrecord, label="{PasswordsController|}"]
"Devise::SessionsController" [shape=Mrecord, label="{SessionsController|}"]
"ActionController::Base" [shape=Mrecord, label="{Base|}"]
"ActionController::Metal" [shape=Mrecord, label="{Metal|}"]
"Devise::OmniauthCallbacksController" [shape=Mrecord, label="{OmniauthCallbacksController|}"]
"Draper::Decorator" [shape=Mrecord, label="{Decorator|}"]
"ActiveJob::Base" [shape=Mrecord, label="{Base|}"]
"ActionMailer::Base" [shape=Mrecord, label="{Base|}"]
"Devise::Mailer" [shape=Mrecord, label="{Mailer|}"]
"ActionDispatch::SSL" [shape=Mrecord, label="{SSL|}"]
"ActiveRecord::Base" [shape=Mrecord, label="{Base|}"]
"M3::ModelSearch" [shape=Mrecord, label="{ModelSearch|}"]
"Uploader::CarrierWave::Base" [shape=Mrecord, label="{Base|}"]
"ActiveModel::EachValidator" [shape=Mrecord, label="{EachValidator|}"]
"ActiveModel::Validator" [shape=Mrecord, label="{Validator|}"]
"Storage" -> "Storage::Base" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Storage" -> "Storage::S3Adapter" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Component" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Journey" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Journeys" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Journeys" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Journeys" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Journeys" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Journeys" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Journeys" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Journeys" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Journeys" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Journeys" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Journeys" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::Module" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::ReportFormBuilder" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds" -> "MyMeds::VerticalTable" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::AdditionalInfo" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::AdverseEventPicker" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::AdverseEventSingleChoice" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::AgePicker" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::Autocomplete" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::CountrySelect" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::DatePicker" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::DateRange" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::DateTimePicker" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::FormulationSelector" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::HcpReaction" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::HeightPicker" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::IndicationPicker" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::InvestigationBase" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::InvestigationFinding" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::InvestigationFindingDescription" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::InvestigationFindingResult" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::InvestigationOther" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::InvestigationOtherResult" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::InvestigationPassFail" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::InvestigationPassFailResult" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::InvestigationRange" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::InvestigationRangeNormal" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::InvestigationRangeResult" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::InvestigationUnknown" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::MedicationBatch" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::MedicationPicker" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::Medicine" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::MedicineBotox" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::MedicineCausality" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::MultiChoice" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::Reaction" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::SingleChoice" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::StudyLinkPicker" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::TelephoneNumber" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::TimePicker" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::WeightPicker" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::Multiple" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Component" -> "Component::MyMeds::NoModuleError" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::AdditionalInfo" -> "AdditionalInfo::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::AdverseEventPicker" -> "AdverseEventPicker::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::AdverseEventSingleChoice" -> "AdverseEventSingleChoice::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::AgePicker" -> "AgePicker::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::Autocomplete" -> "Autocomplete::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::CountrySelect" -> "CountrySelect::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::DatePicker" -> "DatePicker::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::DateRange" -> "DateRange::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::DateTimePicker" -> "DateTimePicker::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::FormulationSelector" -> "FormulationSelector::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::HcpReaction" -> "HcpReaction::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::HeightPicker" -> "HeightPicker::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::IndicationPicker" -> "IndicationPicker::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::InvestigationBase" -> "InvestigationBase::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::InvestigationFinding" -> "InvestigationFinding::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::InvestigationFindingDescription" -> "InvestigationFindingDescription::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::InvestigationFindingResult" -> "InvestigationFindingResult::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::InvestigationOther" -> "InvestigationOther::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::InvestigationOtherResult" -> "InvestigationOtherResult::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::InvestigationPassFail" -> "InvestigationPassFail::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::InvestigationPassFailResult" -> "InvestigationPassFailResult::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::InvestigationRange" -> "InvestigationRange::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::InvestigationRangeNormal" -> "InvestigationRangeNormal::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::InvestigationRangeResult" -> "InvestigationRangeResult::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::InvestigationUnknown" -> "InvestigationUnknown::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::MedicationBatch" -> "MedicationBatch::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::MedicationPicker" -> "MedicationPicker::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::Medicine" -> "Medicine::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::Medicine" -> "Medicine::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Medicine::Component::MyMeds::V1" -> "V1::Medicine::Component::MyMeds::DoseChange" [label="", arrowhead="odiamond", arrowtail="onormal"]
"V1::Medicine::Component::MyMeds::DoseChange" -> "DoseChange::V1::Medicine::Component::MyMeds::Configurable" [label="", arrowhead="odiamond", arrowtail="onormal"]
"V1::Medicine::Component::MyMeds::DoseChange" -> "DoseChange::V1::Medicine::Component::MyMeds::View" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::MedicineBotox" -> "MedicineBotox::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::MedicineCausality" -> "MedicineCausality::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::MultiChoice" -> "MultiChoice::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::Reaction" -> "Reaction::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::SingleChoice" -> "SingleChoice::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::StudyLinkPicker" -> "StudyLinkPicker::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::TelephoneNumber" -> "TelephoneNumber::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::TimePicker" -> "TimePicker::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Component::MyMeds::WeightPicker" -> "WeightPicker::Component::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::AdverseEvents" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::AdverseEventsBotox" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::ClinicalStudyMedications" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::CompanyAwareDate" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::ConcomitantMedications" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::CrdDetails" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::DeathDetails" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::HcpReaction" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::Investigations" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::LiverOtherMedicines" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::MedicalContext" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::Medicine" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::MedicineBotox" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::MedicineBotoxEditable" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::MedicineEditable" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::NoResponseToTreatment" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::OtherConditionPicker" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::ParticipantDetails" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::PatientDetails" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::PatientDetailsBase" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::PatientDetailsOther" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::PatientSeenGP" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::PreviousNotification" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::Reaction" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::ReporterDetails" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::Section" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::SideEffectSelector" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::StaffReporterDetails" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::StudyMedicine" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::SupplementalInvestigations" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::SupplementalRiskFactors" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::SupplementalSideEffects" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::SuspectMedication" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::SuspectMedications" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::TermsAndConditions" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Module" -> "Module::MyMeds::WhoAffected" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::AdverseEvents" -> "AdverseEvents::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::AdverseEventsBotox" -> "AdverseEventsBotox::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::ClinicalStudyMedications" -> "ClinicalStudyMedications::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::CompanyAwareDate" -> "CompanyAwareDate::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::ConcomitantMedications" -> "ConcomitantMedications::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::CrdDetails" -> "CrdDetails::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::DeathDetails" -> "DeathDetails::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::HcpReaction" -> "HcpReaction::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::Investigations" -> "Investigations::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::LiverOtherMedicines" -> "LiverOtherMedicines::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::MedicalContext" -> "MedicalContext::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::Medicine" -> "Medicine::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::MedicineBotox" -> "MedicineBotox::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::MedicineBotoxEditable" -> "MedicineBotoxEditable::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::MedicineEditable" -> "MedicineEditable::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::NoResponseToTreatment" -> "NoResponseToTreatment::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::OtherConditionPicker" -> "OtherConditionPicker::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::ParticipantDetails" -> "ParticipantDetails::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::PatientDetails" -> "PatientDetails::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::PatientDetailsBase" -> "PatientDetailsBase::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::PatientDetailsOther" -> "PatientDetailsOther::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::PatientSeenGP" -> "PatientSeenGP::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::PreviousNotification" -> "PreviousNotification::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::Reaction" -> "Reaction::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::ReporterDetails" -> "ReporterDetails::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::Section" -> "Section::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::SideEffectSelector" -> "SideEffectSelector::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::StaffReporterDetails" -> "StaffReporterDetails::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::StudyMedicine" -> "StudyMedicine::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::SupplementalInvestigations" -> "SupplementalInvestigations::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::SupplementalRiskFactors" -> "SupplementalRiskFactors::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::SupplementalSideEffects" -> "SupplementalSideEffects::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::SuspectMedication" -> "SuspectMedication::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::SuspectMedications" -> "SuspectMedications::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::TermsAndConditions" -> "TermsAndConditions::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Module::MyMeds::WhoAffected" -> "WhoAffected::Module::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Journey" -> "Journey::MyMeds::ConflictingModuleError" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Journey" -> "Journey::MyMeds::Field" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Journeys" -> "Journeys::MyMeds::ContactCentre" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Journeys" -> "Journeys::MyMeds::Hcp" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::Journeys" -> "Journeys::MyMeds::Mop" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Journeys::MyMeds::ContactCentre" -> "ContactCentre::Journeys::MyMeds::Botox" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Journeys::MyMeds::ContactCentre" -> "ContactCentre::Journeys::MyMeds::GlobalAdverseEvent" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Journeys::MyMeds::ContactCentre" -> "ContactCentre::Journeys::MyMeds::MarketResearchProgram1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Journeys::MyMeds::ContactCentre" -> "ContactCentre::Journeys::MyMeds::Psp" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Journeys::MyMeds::ContactCentre" -> "ContactCentre::Journeys::MyMeds::SideEffect" [label="", arrowhead="odiamond", arrowtail="onormal"]
"ContactCentre::Journeys::MyMeds::Botox" -> "Botox::ContactCentre::Journeys::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"ContactCentre::Journeys::MyMeds::GlobalAdverseEvent" -> "GlobalAdverseEvent::ContactCentre::Journeys::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"ContactCentre::Journeys::MyMeds::MarketResearchProgram1" -> "MarketResearchProgram1::ContactCentre::Journeys::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"ContactCentre::Journeys::MyMeds::Psp" -> "Psp::ContactCentre::Journeys::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"ContactCentre::Journeys::MyMeds::SideEffect" -> "SideEffect::ContactCentre::Journeys::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Journeys::MyMeds::Hcp" -> "Hcp::Journeys::MyMeds::ClinicalStudy" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Journeys::MyMeds::Hcp" -> "Hcp::Journeys::MyMeds::SideEffect" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Journeys::MyMeds::Hcp" -> "Hcp::Journeys::MyMeds::SideEffectElm" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Hcp::Journeys::MyMeds::ClinicalStudy" -> "ClinicalStudy::Hcp::Journeys::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Hcp::Journeys::MyMeds::SideEffect" -> "SideEffect::Hcp::Journeys::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Hcp::Journeys::MyMeds::SideEffectElm" -> "SideEffectElm::Hcp::Journeys::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Journeys::MyMeds::Mop" -> "Mop::Journeys::MyMeds::SideEffect" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Mop::Journeys::MyMeds::SideEffect" -> "SideEffect::Mop::Journeys::MyMeds::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::ReportFormBuilder" -> "ReportFormBuilder::MyMeds::Base" [label="", arrowhead="odiamond", arrowtail="onormal"]
"MyMeds::ReportFormBuilder" -> "ReportFormBuilder::MyMeds::DataBuilder" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::AccessRightsController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::ApplicationController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::ConfigurationController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::ConfirmationsController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::CountryController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::ExportMobileAssetsController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::HomeController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::JobsController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::JourneysController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::LanguageController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::LanguageForTranslationController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::LmsUserController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::MobileAssetsController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::PasswordExpiredController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::PasswordsController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::Reporting" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::Reporting" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::ReportsController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::SessionsController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::SiteNotificationsController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::SitesController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::SitesFilterController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::StudiesController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::TestControlsController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::TriggersController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::UsersController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::AccessRightsHelper" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::CountryHelper" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::JourneyHelper" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::SitesHelper" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::TestControlsHelper" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin" -> "Admin::UserHelper" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin::JourneysController" -> "JourneysController::Admin::JourneyParams" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin::Reporting" -> "Reporting::Admin::AuditLogsController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Admin::Reporting" -> "Reporting::Admin::ListingsController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Api" -> "Api::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Api" -> "Api::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Api" -> "Api::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Api" -> "Api::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Api" -> "Api::V1" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Api::V1" -> "V1::Api::BaseController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Api::V1" -> "V1::Api::CountriesController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Api::V1" -> "V1::Api::JourneysController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Api::V1" -> "V1::Api::ReportsController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Api::V1" -> "V1::Api::VerifySignatureController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"ContactCentre" -> "ContactCentre::ApplicationController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"ContactCentre" -> "ContactCentre::HomeController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"ContactCentre" -> "ContactCentre::ListingsController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"ContactCentre" -> "ContactCentre::QualityReviewController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"ContactCentre" -> "ContactCentre::ReportHistoryController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"ContactCentre" -> "ContactCentre::Reporting" [label="", arrowhead="odiamond", arrowtail="onormal"]
"ContactCentre" -> "ContactCentre::Reporting" [label="", arrowhead="odiamond", arrowtail="onormal"]
"ContactCentre" -> "ContactCentre::Reporting" [label="", arrowhead="odiamond", arrowtail="onormal"]
"ContactCentre" -> "ContactCentre::Reporting" [label="", arrowhead="odiamond", arrowtail="onormal"]
"ContactCentre" -> "ContactCentre::ReportsController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"ContactCentre" -> "ContactCentre::SitesFilterController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"ContactCentre::Reporting" -> "Reporting::ContactCentre::CaseListingsController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"ContactCentre::Reporting" -> "Reporting::ContactCentre::ReconciliationListingsController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"ContactCentre::Reporting" -> "Reporting::ContactCentre::ReconciliationsController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"ContactCentre::Reporting" -> "Reporting::ContactCentre::ReportListingsController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Konacha" -> "Konacha::SpecsController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Search" -> "Search::DrugsController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Search" -> "Search::EventsController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Search" -> "Search::InvestigationsController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Search" -> "Search::LabsController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Search" -> "Search::UsersController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Search" -> "Search::ZipcodesController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Staff" -> "Staff::AdverseEventsController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Staff" -> "Staff::ApplicationController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Staff" -> "Staff::HomeController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Staff" -> "Staff::PatientsController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Test" -> "Test::ExporterTestController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Test" -> "Test::ExternalController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Test" -> "Test::SessionsController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Test" -> "Test::SsoController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Test" -> "Test::ExporterTestHelper" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Users" -> "Users::OmniauthCallbacksController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Users" -> "Users::ActivityLogger" [label="", arrowhead="odiamond", arrowtail="onormal"]
"ModalHelper" -> "ModalHelper::ModalBuilder" [label="", arrowhead="odiamond", arrowtail="onormal"]
"WellHelper" -> "WellHelper::WellBuilder" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Abilities" -> "Abilities::ClientAdmin" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Abilities" -> "Abilities::M3Admin" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Abilities" -> "Abilities::SiteUser" [label="", arrowhead="odiamond", arrowtail="onormal"]
"BodyMap" -> "BodyMap::PartCategory" [label="", arrowhead="odiamond", arrowtail="onormal"]
"BodyMap" -> "BodyMap::Term" [label="", arrowhead="odiamond", arrowtail="onormal"]
"BodyMap::PartCategory" -> "PartCategory::BodyMap::Translation" [label="", arrowhead="odiamond", arrowtail="onormal"]
"BodyMap::Term" -> "Term::BodyMap::Translation" [label="", arrowhead="odiamond", arrowtail="onormal"]
"ClientAdmin" -> "ClientAdmin::ApplicationController" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Meddra" -> "Meddra::ColloquialTerm" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Meddra" -> "Meddra::HighLevelGroupTerm" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Meddra" -> "Meddra::HighLevelGroupTermHighLevelTermComposition" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Meddra" -> "Meddra::HighLevelTerm" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Meddra" -> "Meddra::HighLevelTermPreferredTermComposition" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Meddra" -> "Meddra::Language" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Meddra" -> "Meddra::LowLevelTerm" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Meddra" -> "Meddra::PreferredTerm" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Meddra" -> "Meddra::SocHighLevelGroupTermComposition" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Meddra" -> "Meddra::SocTerm" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Report" -> "Report::Data" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Report::Data" -> "Data::Report::Errors" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Reports" -> "Reports::AuditLogListing" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Reports" -> "Reports::CacheCaseListing" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Reports" -> "Reports::CaseListing" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Reports" -> "Reports::ContactCentreListing" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Reports" -> "Reports::DrugListing" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Reports" -> "Reports::Listing" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Reports" -> "Reports::QualityReviewListing" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Reports" -> "Reports::ReconciliationsListing" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Reports" -> "Reports::ReportListing" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Reports" -> "Reports::SiteListing" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Reports" -> "Reports::StudyListing" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Reports" -> "Reports::UserListing" [label="", arrowhead="odiamond", arrowtail="onormal"]
"Reports" -> "Reports::ActivityLogger" [label="", arrowhead="odiamond", arrowtail="onormal"]
"StateMachines" -> "StateMachines::DefaultReportStateMachine" [label="", arrowhead="odiamond", arrowtail="onormal"]
"StateMachines" -> "StateMachines::QualityReviewStateMachine" [label="", arrowhead="odiamond", arrowtail="onormal"]
"StateMachines" -> "StateMachines::TranslationStateMachine" [label="", arrowhead="odiamond", arrowtail="onormal"]
"PdfService" -> "PdfService::PdfRenderer" [label="", arrowhead="odiamond", arrowtail="onormal"]
}
